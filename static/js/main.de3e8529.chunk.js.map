{"version":3,"sources":["Components/DarkModeToggler.jsx","Redux/Constants/LoginConstants.jsx","Redux/Actions/LoginAction.jsx","Screens/Login.jsx","Screens/Registration.jsx","Components/WelcomePage.jsx","Components/ChatArea.jsx","Components/ChattingHead.jsx","Components/Chatting.jsx","Components/ChatUser.jsx","Components/SidePanel.jsx","Components/RightSidePanel.jsx","Screens/Dashboard.jsx","Components/ProtectedRoute.jsx","Screens/Test.jsx","App.js","reportWebVitals.js","serviceWorkerRegistration.js","Redux/store.js","Redux/Reducers/LoginReducer.jsx","index.js"],"names":["DarkModeToggler","useState","theme","setTheme","useEffect","localStorage","window","matchMedia","matches","document","documentElement","classList","add","setItem","remove","onClick","className","LOGIN_REQUEST","LOGIN_REQUEST_SUCCESS","LOGIN_REQUEST_FAILED","LOGOUT","logOut","dispatch","a","removeItem","type","Login","showPass","setShowPass","useDispatch","navigate","useNavigate","location","useLocation","useForm","register","handleSubmit","control","errors","formState","from","state","pathname","getItem","src","alt","onSubmit","data","token","user","jwt_decode","payload","JSON","stringify","error","response","message","autoComplete","required","render","field","email","placeholder","min","password","to","Registration","console","log","autocomplete","name","WelcomePage","img","TextArea","Input","ChatArea","image","chatAreaWidth","isActive","useRef","textArea","bottomAreaHeight","lastMessage","pickFile","setPickFile","inputTextWidth","setInputTextWidth","textAreaParentHeight","setTextAreaParentHeight","bottomAreaFullHeight","setBottomAreaFullHeight","setMessage","isMobileWidth","setIsMobileWidth","showPicker","setShowPicker","useSelector","chatList","setChatList","fileList","setFileList","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","audio","Audio","current","offsetWidth","offsetHeight","innerWidth","addEventListener","scrollIntoView","behavior","block","messageSendHandler","trim","previous","timestamp","Date","toLocaleDateString","hour","minute","setTimeout","play","menu","Item","target","rel","href","messageOptions","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handlePreview","url","preview","originFileObj","substring","lastIndexOf","uploadButton","PlusOutlined","style","marginTop","ref","maxHeight","height","map","chat","index","overlay","trigger","length","details","photo","width","action","listType","onPreview","onChange","multiple","visible","title","footer","onCancel","val","centered","onOk","pickerStyle","onEmojiClick","event","emojiObject","prevInput","emoji","value","e","onKeyPress","key","preventDefault","autoSize","maxRows","minRows","placement","arrow","ChattingHead","closeUserChat","toggleRightSidePanel","showUserDetailsModal","setShowUserDetailsModal","class","fontSize","display","onBlur","Chatting","ChatUser","time","lastMsg","openUserChat","activeChat","setActiveChat","SidePanel","featureHeight","chatListHeight","status","setStatus","onlineStatus","setOnlineStatus","statusDropDown","onlineStatusDropDown","Array","_","RightSidePanel","i","Dashboard","socketId","setSocketId","setChatListHeight","userChatOpen","setUserChatOpen","showFiles","setShowFiles","socket","io","on","id","userId","ProtectedRoute","children","userInfo","_id","Test","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","reducer","combineReducers","isLoading","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","StrictMode","getElementById","URL","process","origin","fetch","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","ServiceWorkerRegistration"],"mappings":"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","file":"static/js/main.de3e8529.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nconst DarkModeToggler = () => {\r\n    const [theme, setTheme] = useState('dark');\r\n\r\n    useEffect(() => {\r\n        if (\r\n            localStorage.theme === 'dark' ||\r\n            (!('theme' in localStorage) &&\r\n                window.matchMedia('(prefers-color-scheme: dark)').matches)\r\n        ) {\r\n            document.documentElement.classList.add('dark');\r\n        } else {\r\n            localStorage.setItem('theme', 'light');\r\n            document.documentElement.classList.remove('dark');\r\n        }\r\n    }, [theme]);\r\n\r\n    return (\r\n        <span\r\n            onClick={() => {\r\n                setTheme(theme === 'dark' ? 'light' : 'dark');\r\n                localStorage.setItem('theme', theme === 'dark' ? 'light' : 'dark');\r\n            }}\r\n            className=\"material-icons-outlined cursor-pointer hover:text-gray-700 dark:text-white dark:hover:text-gray-300 transition-all ease-in-out\"\r\n        >\r\n            {localStorage.theme === 'dark' ||\r\n            (!('theme' in localStorage) &&\r\n                window.matchMedia('(prefers-color-scheme: dark)').matches)\r\n                ? 'light_mode'\r\n                : 'nightlight_round'}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default DarkModeToggler;\r\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILED = 'LOGIN_REQUEST_FAILED';\r\nexport const LOGOUT = 'LOGOUT';\r\n","// import axios from 'axios';\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_REQUEST_FAILED,\r\n    LOGIN_REQUEST_SUCCESS,\r\n    LOGOUT,\r\n} from '../Constants/LoginConstants';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const login = (postData) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: LOGIN_REQUEST,\r\n        });\r\n\r\n        // let { data: tokenData } = await axios.post('/vendor/login', postData);\r\n\r\n        // let token = tokenData.data.refreshToken;\r\n\r\n        let token =\r\n            'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTQ4OGU4YjUyNTFhMmVhMGQwMTcyNTAiLCJuYW1lIjoiTWlzcyBEb3JlZW4gR3JpbWVzIiwiZW1haWwiOiJNYXJjaWEzNEBob3RtYWlsLmNvbSIsInBob3RvIjoiaHR0cDovL3BsYWNlaW1nLmNvbS82NDAvNDgwL2J1c2luZXNzIiwidHlwZSI6InZlbmRvciIsImlhdCI6MTYzNDMyMDQwMSwiZXhwIjoxNjY1ODc4MDAxfQ.kG7fQ2XY6yz1qIQ4IYbGHDCxxBFTmdXIlWrED-YY3Ck';\r\n\r\n        let user = jwt_decode(token);\r\n\r\n        dispatch({\r\n            type: LOGIN_REQUEST_SUCCESS,\r\n            payload: user,\r\n        });\r\n\r\n        localStorage.setItem('token', JSON.stringify(token));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGIN_REQUEST_FAILED,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const logOut = () => async (dispatch) => {\r\n    localStorage.removeItem('token');\r\n    dispatch({\r\n        type: LOGOUT,\r\n    });\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport DarkModeToggler from '../Components/DarkModeToggler';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../Redux/Actions/LoginAction';\r\n\r\nconst Login = () => {\r\n    const [showPass, setShowPass] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        control,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    let from = location.state?.from?.pathname || '/dashboard';\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('token')) {\r\n            navigate(from);\r\n        }\r\n    }, [navigate, from]);\r\n\r\n    const onSubmit = (data) => {\r\n        dispatch(login(data));\r\n        navigate(from);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dark:bg-gray-900 bg-white h-screen w-screen dark:text-white flex justify-center items-center\">\r\n            <div className=\"mx-2 lg:mx-0 bg-white lg:w-96 shadow-2xl p-9 border border-gray-200 dark:border-gray-900 rounded-xl dark:bg-gray-800\">\r\n                <div className=\"flex justify-end items-center\">\r\n                    <DarkModeToggler />\r\n                </div>\r\n                <div className=\"flex justify-center items-center mb-6\">\r\n                    <img className=\"h-20\" src=\"/logo.png\" alt=\"logo\" />\r\n                </div>\r\n                <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                    <Controller\r\n                        {...register('email', { required: true })}\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <div\r\n                                className={`flex px-2 h-11 items-center border ${\r\n                                    errors.email\r\n                                        ? 'border-red-500'\r\n                                        : 'border-gray-400 dark:border-gray-900'\r\n                                } rounded-lg mt-4 mb-2`}\r\n                            >\r\n                                <span className=\"material-icons-outlined mr-2\">email</span>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    {...field}\r\n                                    className=\"dark:text-white w-full dark:bg-gray-800 focus:outline-none\"\r\n                                    placeholder=\"Your Email\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    />\r\n                    {errors.email && <p className=\"text-red-500 mb-2\">Email is required</p>}\r\n\r\n                    <Controller\r\n                        {...register('password', { required: true, min: 6 })}\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <div\r\n                                className={`flex px-2 h-11 items-center border ${\r\n                                    errors.password\r\n                                        ? 'border-red-500'\r\n                                        : 'border-gray-400 dark:border-gray-900'\r\n                                } rounded-lg mt-4 mb-2`}\r\n                            >\r\n                                <span className=\"material-icons-outlined mr-2\">vpn_key</span>\r\n                                <input\r\n                                    {...field}\r\n                                    type={showPass ? 'text' : 'password'}\r\n                                    className=\"dark:text-white w-full dark:bg-gray-800 focus:outline-none\"\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                                <span\r\n                                    className=\"material-icons-outlined mr-2 cursor-pointer\"\r\n                                    onClick={() => setShowPass(!showPass)}\r\n                                >\r\n                                    {showPass ? 'visibility_off' : 'visibility'}\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    />\r\n                    {errors.password && <p className=\"text-red-500 mb-2\">Password is required</p>}\r\n\r\n                    <button\r\n                        className=\"h-11 border hover:text-white border-gray-400 dark:border-gray-900 rounded-lg w-full hover:bg-gray-900 transition-all ease-in-out\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Login\r\n                    </button>\r\n\r\n                    <div className=\"flex justify-between items-center my-4\">\r\n                        <p>Not have account?</p>\r\n                        <Link\r\n                            to=\"/registration\"\r\n                            className=\"hover:text-gray-600 dark:hover:text-gray-300 dark:text-white transition-all ease-in-out\"\r\n                        >\r\n                            Sign Up\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import { Link, useNavigate } from 'react-router-dom';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport DarkModeToggler from '../Components/DarkModeToggler';\r\nimport { useState } from 'react';\r\n\r\nconst Registration = () => {\r\n    const [showPass, setShowPass] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        control,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        navigate('/dashboard');\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dark:bg-gray-900 bg-white h-screen w-screen dark:text-white flex justify-center items-center\">\r\n            <div className=\"mx-2 lg:mx-0 bg-white lg:w-96 shadow-2xl p-9 border border-gray-200 dark:border-gray-900 rounded-xl dark:bg-gray-800\">\r\n                <div className=\"flex justify-end items-center\">\r\n                    <DarkModeToggler />\r\n                </div>\r\n                <div className=\"flex justify-center items-center mb-6\">\r\n                    <img className=\"h-20\" src=\"/logo.png\" alt=\"logo\" />\r\n                </div>\r\n                <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\r\n                    <Controller\r\n                        {...register('name', { required: true })}\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <div\r\n                                className={`flex px-2 h-11 items-center border ${\r\n                                    errors.name\r\n                                        ? 'border-red-500'\r\n                                        : 'border-gray-200 dark:border-gray-900'\r\n                                } rounded-lg mt-4 mb-2`}\r\n                            >\r\n                                <span className=\"material-icons-outlined mr-2\">person</span>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    {...field}\r\n                                    className=\"dark:text-white w-full dark:bg-gray-800 focus:outline-none\"\r\n                                    placeholder=\"Your Name\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    />\r\n                    {errors.name && <p className=\"text-red-500 mb-2\">Name is required</p>}\r\n\r\n                    <Controller\r\n                        {...register('email', { required: true })}\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <div\r\n                                className={`flex px-2 h-11 items-center border ${\r\n                                    errors.email\r\n                                        ? 'border-red-500'\r\n                                        : 'border-gray-400 dark:border-gray-900'\r\n                                } rounded-lg mt-4 mb-2`}\r\n                            >\r\n                                <span className=\"material-icons-outlined mr-2\">email</span>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    {...field}\r\n                                    className=\"dark:text-white w-full dark:bg-gray-800 focus:outline-none\"\r\n                                    placeholder=\"Your Email\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    />\r\n                    {errors.email && <p className=\"text-red-500 mb-2\">Email is required</p>}\r\n\r\n                    <Controller\r\n                        {...register('password', { required: true, min: 6 })}\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <div\r\n                                className={`flex px-2 h-11 items-center border ${\r\n                                    errors.password\r\n                                        ? 'border-red-500'\r\n                                        : 'border-gray-400 dark:border-gray-900'\r\n                                } rounded-lg mt-4 mb-2`}\r\n                            >\r\n                                <span className=\"material-icons-outlined mr-2\">vpn_key</span>\r\n                                <input\r\n                                    {...field}\r\n                                    type={showPass ? 'text' : 'password'}\r\n                                    className=\"dark:text-white w-full dark:bg-gray-800 focus:outline-none\"\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                                <span\r\n                                    className=\"material-icons-outlined mr-2 cursor-pointer\"\r\n                                    onClick={() => setShowPass(!showPass)}\r\n                                >\r\n                                    {showPass ? 'visibility_off' : 'visibility'}\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    />\r\n                    {errors.password && <p className=\"text-red-500 mb-2\">Password is required</p>}\r\n\r\n                    <button\r\n                        className=\"h-11 border hover:text-white border-gray-400 dark:border-gray-900 rounded-lg w-full hover:bg-gray-900 transition-all ease-in-out\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Login\r\n                    </button>\r\n\r\n                    <div className=\"flex justify-between items-center my-4\">\r\n                        <p>Already registered?</p>\r\n                        <Link\r\n                            to=\"/\"\r\n                            className=\"hover:text-gray-600 dark:hover:text-gray-300 dark:text-white transition-all ease-in-out\"\r\n                        >\r\n                            Sign In\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registration;\r\n","const WelcomePage = ({ img, name }) => {\r\n    return (\r\n        <div className=\"w-full h-screen dark:bg-gray-700 flex justify-center items-center\">\r\n            <div className=\"flex justify-start items-center\">\r\n                <div className=\"border h-20 w-20 border-gray-400 dark:border-gray-800 rounded-full relative\">\r\n                    {img ? (\r\n                        <img className=\"rounded-full h-20 w-20\" src={img} alt=\"user\" />\r\n                    ) : (\r\n                        <img\r\n                            className=\"rounded-full h-20 w-20\"\r\n                            src={`https://ui-avatars.com/api/?name=${name}`}\r\n                            alt=\"user\"\r\n                        />\r\n                    )}\r\n\r\n                    <div className=\"absolute bottom-0 right-0 border rounded-full h-5 w-5 bg-green-500\"></div>\r\n                </div>\r\n                <div className=\"pl-2\">\r\n                    <p className=\"text-4xl mb-0 font-thin\">Welcome !</p>\r\n                    <p className=\"text-3xl mb-0 dark:text-gray-200 text-gray-500 font-semibold pt-1 cursor-pointer\">\r\n                        {name}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WelcomePage;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { Menu, Dropdown, Input, Modal, Upload } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { useSelector } from 'react-redux';\r\nimport Picker from 'emoji-picker-react';\r\nconst { TextArea } = Input;\r\n\r\nconst ChatArea = ({ image, isActive, name }) => {\r\n    const chatAreaWidth = useRef(0);\r\n    const textArea = useRef(0);\r\n    const bottomAreaHeight = useRef(0);\r\n    const lastMessage = useRef(null);\r\n    const [pickFile, setPickFile] = useState(false);\r\n    const [inputTextWidth, setInputTextWidth] = useState(0);\r\n    const [textAreaParentHeight, setTextAreaParentHeight] = useState(0);\r\n    const [bottomAreaFullHeight, setBottomAreaFullHeight] = useState(0);\r\n    const [message, setMessage] = useState('');\r\n    const [isMobileWidth, setIsMobileWidth] = useState(false);\r\n    const [showPicker, setShowPicker] = useState(false);\r\n    const user = useSelector((state) => state.user);\r\n    const [chatList, setChatList] = useState([]);\r\n    const [fileList, setFileList] = useState([]);\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n\r\n    let audio = new Audio('/message.mp3');\r\n\r\n    useEffect(() => {\r\n        setInputTextWidth(chatAreaWidth.current.offsetWidth);\r\n        setTextAreaParentHeight(textArea.current.offsetHeight);\r\n        setBottomAreaFullHeight(bottomAreaHeight.current.offsetHeight);\r\n\r\n        if (window.innerWidth < 992) {\r\n            setIsMobileWidth(true);\r\n        } else {\r\n            setIsMobileWidth(false);\r\n        }\r\n\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerWidth < 992) {\r\n                setIsMobileWidth(true);\r\n            } else {\r\n                setIsMobileWidth(false);\r\n            }\r\n        });\r\n\r\n        lastMessage.current?.scrollIntoView({ behavior: 'smooth', block: 'end' });\r\n    }, [textArea, bottomAreaHeight, textAreaParentHeight, chatAreaWidth, chatList]);\r\n\r\n    const onEmojiClick = (event, emojiObject) => {\r\n        setMessage((prevInput) => prevInput + emojiObject.emoji);\r\n    };\r\n\r\n    //send message handler\r\n    const messageSendHandler = () => {\r\n        if (message.trim() !== '') {\r\n            setChatList((previous) => [\r\n                ...previous,\r\n                {\r\n                    from: 'Sazzad',\r\n                    message: message,\r\n                    timestamp: new Date().toLocaleDateString('en-US', {\r\n                        hour: 'numeric',\r\n                        minute: 'numeric',\r\n                    }),\r\n                },\r\n            ]);\r\n            setMessage('');\r\n\r\n            setTimeout(() => {\r\n                setChatList((previous) => [\r\n                    ...previous,\r\n                    {\r\n                        from: 'John Doe',\r\n                        message: message,\r\n                        timestamp: new Date().toLocaleDateString('en-US', {\r\n                            hour: 'numeric',\r\n                            minute: 'numeric',\r\n                        }),\r\n                    },\r\n                ]);\r\n                audio.play();\r\n            }, 2000);\r\n        }\r\n    };\r\n\r\n    // send message\r\n    const sendMessage = (e) => {\r\n        if (e.key === 'Enter' || e.key === 'NumpadEnter') {\r\n            e.preventDefault();\r\n            messageSendHandler();\r\n        }\r\n    };\r\n\r\n    // dropdown menu for mobile view\r\n    const menu = (\r\n        <Menu className=\"dark:bg-gray-800\">\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\r\n                    1st menu item\r\n                </a>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.aliyun.com\">\r\n                    2nd menu item\r\n                </a>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.luohanacademy.com\">\r\n                    3rd menu item\r\n                </a>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    // dropdown menu for chat\r\n    const messageOptions = (\r\n        <Menu className=\"dark:bg-gray-800\">\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\" key=\"1\">\r\n                Copy\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\" key=\"2\">\r\n                Quote\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\" key=\"3\">\r\n                Forward\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\" key=\"3\">\r\n                Select Message\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    // get image in base64\r\n    const getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n    };\r\n\r\n    const handleCancel = () => setPreviewVisible(false);\r\n\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n        setPreviewVisible(true);\r\n    };\r\n\r\n    const handleChange = ({ fileList }) => setFileList(fileList);\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div style={{ marginTop: 8 }}>Select</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div\r\n            className=\"container lg:container xl:container 2xl:container mx-auto h-screen relative\"\r\n            ref={chatAreaWidth}\r\n        >\r\n            {/* chat message area */}\r\n            <div\r\n                className=\"overflow-auto mt-5\"\r\n                style={{\r\n                    maxHeight: `calc(100vh - ${bottomAreaFullHeight + 110}px)`,\r\n                    height: `calc(100vh - ${bottomAreaFullHeight + 110}px)`,\r\n                }}\r\n            >\r\n                {chatList.map((chat, index) => (\r\n                    <div key={index}>\r\n                        {chat.from === 'John Doe' ? (\r\n                            <>\r\n                                {/* Others message */}\r\n                                <div className=\"flex mb-5\">\r\n                                    <div className=\"h-9 w-9 lg:h-11 lg:w-11 border-gray-400 dark:border-gray-800 rounded-full\">\r\n                                        <img\r\n                                            className=\"rounded-full h-9 w-9 lg:h-11 lg:w-11\"\r\n                                            src={image}\r\n                                            alt=\"user\"\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <div className=\"dark:text-gray-500 px-2\">\r\n                                            {chat.timestamp}\r\n                                        </div>\r\n                                        <Dropdown\r\n                                            overlay={messageOptions}\r\n                                            trigger={['contextMenu']}\r\n                                        >\r\n                                            <div className=\"ml-2 p-3 max-w-xs lg:max-w-lg xl:max-w-xl border dark:border-gray-800 rounded-tl-none rounded-xl dark:bg-gray-800 shadow-xl\">\r\n                                                {chat.message}\r\n                                            </div>\r\n                                        </Dropdown>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {console.log(index, chatList.length)}\r\n                                {/* my message */}\r\n                                <div className=\"flex mb-5 justify-end\">\r\n                                    <div>\r\n                                        <div className=\"dark:text-gray-500 px-3 flex justify-end\">\r\n                                            {chat.timestamp}\r\n                                        </div>\r\n                                        <Dropdown\r\n                                            overlay={messageOptions}\r\n                                            trigger={['contextMenu']}\r\n                                        >\r\n                                            <div className=\"mr-2 p-3 max-w-xs lg:max-w-lg xl:max-w-xl ml-auto flex border dark:border-gray-800 rounded-tr-none rounded-xl dark:bg-gray-800 shadow-xl\">\r\n                                                {chat.message}\r\n                                            </div>\r\n                                        </Dropdown>\r\n                                        {index === chat.length && (\r\n                                            <div className=\"h-5 w-5 mr-2 border-gray-400 ml-auto dark:border-gray-800 rounded-full\">\r\n                                                <img\r\n                                                    className=\"rounded-full h-5 w-5\"\r\n                                                    src={image}\r\n                                                    alt=\"user\"\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"h-9 w-9 lg:h-11 lg:w-11 border-gray-400 dark:border-gray-800 rounded-full\">\r\n                                        <img\r\n                                            className=\"rounded-full h-9 w-9 lg:h-11 lg:w-11\"\r\n                                            src={user?.details?.photo}\r\n                                            alt=\"user\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                        <div ref={lastMessage} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* input text area */}\r\n            <div\r\n                className=\" py-2 sticky bottom-0 left-0 right-0 dark:bg-black ml-auto\"\r\n                ref={bottomAreaHeight}\r\n            >\r\n                <div className=\"flex justify-between\">\r\n                    <div\r\n                        className=\"group dark:bg-gray-800 border dark:border-gray-800 rounded-xl \"\r\n                        style={{\r\n                            width: inputTextWidth * (3 / 4),\r\n                        }}\r\n                    >\r\n                        {pickFile && (\r\n                            <div className=\"flex flex-wrap items-center h-32 px-2 py-1 overflow-auto w-full\">\r\n                                <Upload\r\n                                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                    listType=\"picture-card\"\r\n                                    fileList={fileList}\r\n                                    onPreview={handlePreview}\r\n                                    onChange={handleChange}\r\n                                    multiple={true}\r\n                                >\r\n                                    {uploadButton}\r\n                                </Upload>\r\n                                <Modal\r\n                                    visible={previewVisible}\r\n                                    title={previewTitle}\r\n                                    footer={null}\r\n                                    onCancel={handleCancel}\r\n                                >\r\n                                    <img\r\n                                        alt=\"example\"\r\n                                        style={{ width: '100%' }}\r\n                                        src={previewImage}\r\n                                    />\r\n                                </Modal>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"flex overflow-x-hidden\">\r\n                            <div>\r\n                                <span\r\n                                    onClick={() => setShowPicker((val) => !val)}\r\n                                    className=\"material-icons-outlined p-2 mr-1 cursor-pointer rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-900 transition-all ease-in-out\"\r\n                                >\r\n                                    sentiment_satisfied\r\n                                </span>\r\n                                <Modal\r\n                                    title=\"Select Emoji\"\r\n                                    centered\r\n                                    visible={showPicker}\r\n                                    onOk={() => setShowPicker(false)}\r\n                                    onCancel={() => setShowPicker(false)}\r\n                                >\r\n                                    <Picker\r\n                                        pickerStyle={{ width: '100%' }}\r\n                                        onEmojiClick={onEmojiClick}\r\n                                    />\r\n                                </Modal>\r\n                            </div>\r\n\r\n                            <TextArea\r\n                                ref={textArea}\r\n                                value={message}\r\n                                type=\"text\"\r\n                                placeholder=\"Type a message\"\r\n                                className=\"dark:text-white h-11 transition-all ease-in-out focus:border-none hover:border-none pt-2 text-lg border-none dark:border-gray-800 dark:bg-gray-800 focus:outline-none rounded-xl\"\r\n                                style={{\r\n                                    width: inputTextWidth * (3 / 4) - 30,\r\n                                }}\r\n                                onChange={(e) => setMessage(e.target.value)}\r\n                                onKeyPress={sendMessage}\r\n                                autoSize={{ maxRows: 5, minRows: 5 }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <span\r\n                            className=\"material-icons-outlined p-2 mx-2 dark:bg-gray-800 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-black transition-all ease-in-out\"\r\n                            onClick={messageSendHandler}\r\n                        >\r\n                            send\r\n                        </span>\r\n                        {!isMobileWidth ? (\r\n                            <>\r\n                                <span\r\n                                    className=\"material-icons-outlined p-2 mx-2 dark:bg-gray-800 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-black transition-all ease-in-out\"\r\n                                    onClick={() => setPickFile(!pickFile)}\r\n                                >\r\n                                    {pickFile ? 'close' : 'attach_file'}\r\n                                </span>\r\n                                <span className=\"material-icons-outlined p-2 mx-2 dark:bg-gray-800 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-black transition-all ease-in-out\">\r\n                                    contact_mail\r\n                                </span>\r\n                            </>\r\n                        ) : (\r\n                            <Dropdown overlay={menu} placement=\"topRight\" arrow>\r\n                                <span className=\"material-icons-outlined p-2 mx-2 bg-gray-800 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-black transition-all ease-in-out\">\r\n                                    more_horiz\r\n                                </span>\r\n                            </Dropdown>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatArea;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst ChattingHead = ({ image, isActive, name, closeUserChat, toggleRightSidePanel }) => {\r\n    const [isMobileWidth, setIsMobileWidth] = useState(false);\r\n    const [showUserDetailsModal, setShowUserDetailsModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (window.innerWidth < 992) {\r\n            setIsMobileWidth(true);\r\n        } else {\r\n            setIsMobileWidth(false);\r\n        }\r\n\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerWidth < 992) {\r\n                setIsMobileWidth(true);\r\n            } else {\r\n                setIsMobileWidth(false);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"flex justify-between items-center border-b dark:border-gray-500\">\r\n            <div className=\"flex items-center mb-4\">\r\n                <span\r\n                    class=\"visible w-auto lg:invisible lg:w-0 material-icons-outlined p-1.5 mr-3 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-800 transition-all ease-in-out\"\r\n                    onClick={closeUserChat}\r\n                >\r\n                    west\r\n                </span>\r\n                <div className=\"h-12 w-12 border-gray-400 dark:border-gray-800 rounded-full\">\r\n                    <img className=\"rounded-full h-11 w-11\" src={image} alt=\"user\" />\r\n                </div>\r\n                <div className=\"pl-2 w-32 lg:w-auto\">\r\n                    <div className=\"flex items-center\">\r\n                        <p className=\"mb-0 w-24 lg:w-auto truncate text-lg text-black group-hover:text-white dark:text-white\">\r\n                            {name}\r\n                        </p>\r\n                        <span\r\n                            className=\"material-icons-outlined ml-1 cursor-pointer hover:text-gray-400 transition-colors duration-700 ease-in-out\"\r\n                            style={{ fontSize: 15 }}\r\n                            onClick={() => setShowUserDetailsModal(true)}\r\n                        >\r\n                            settings\r\n                        </span>\r\n                        <div\r\n                            className=\"absolute mx-auto w-11/12 md:w-2/3 lg:w-2/4 xl:w-1/4 top-0 z-20 left-0 right-0 bottom-0 overflow-auto\"\r\n                            style={{ display: showUserDetailsModal ? 'block' : 'none' }}\r\n                            onBlur={() => setShowUserDetailsModal(false)}\r\n                        >\r\n                            <div\r\n                                className={\r\n                                    showUserDetailsModal\r\n                                        ? 'mt-20 h-auto w-auto dark:bg-gray-800 p-0 border dark:border-gray-800 rounded-xl z-20 transition-all ease-in-out'\r\n                                        : 'mt-20 h-0 w-0 dark:bg-gray-800 p-0 border dark:border-gray-800 rounded-xl z-20 transition-all ease-in-out'\r\n                                }\r\n                            >\r\n                                <div className=\"relative rounded-t-xl\">\r\n                                    <div className=\"absolute top-10 left-1/2 transform -translate-x-1/2\">\r\n                                        <img\r\n                                            className=\"rounded-full h-28 w-28\"\r\n                                            src={image}\r\n                                            alt=\"user\"\r\n                                        />\r\n                                    </div>\r\n                                    <span\r\n                                        onClick={() => setShowUserDetailsModal(false)}\r\n                                        className=\"material-icons-outlined absolute top-0 right-0 p-1 dark:bg-gray-800 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-black transition-all ease-in-out\"\r\n                                    >\r\n                                        close\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"mt-40 pb-4\">\r\n                                    <h1 className=\"text-2xl font-bold text-center  dark:text-white\">\r\n                                        {name}\r\n                                    </h1>\r\n\r\n                                    <ul className=\"list-none mx-8 mt-10 mb-7\">\r\n                                        <li className=\"border-b py-3 dark:border-gray-600 flex items-center cursor-pointer hover:bg-gray-900 px-3 transition-all ease-in-out\">\r\n                                            <span class=\"material-icons-outlined mr-2 text-xs\">\r\n                                                message\r\n                                            </span>\r\n                                            <span>Send Message</span>\r\n                                        </li>\r\n                                        <li className=\"border-b py-3 dark:border-gray-600 flex items-center cursor-pointer hover:bg-gray-900 px-3 transition-all ease-in-out\">\r\n                                            <span class=\"material-icons-outlined mr-2 text-xs\">\r\n                                                call\r\n                                            </span>\r\n                                            <span>Make a call</span>\r\n                                        </li>\r\n                                        <li className=\"border-b py-3 dark:border-gray-600 flex items-center cursor-pointer hover:bg-gray-900 px-3 transition-all ease-in-out\">\r\n                                            <span class=\"material-icons-outlined mr-2 text-xs\">\r\n                                                videocam\r\n                                            </span>\r\n                                            <span>Make a video call</span>\r\n                                        </li>\r\n                                        <li className=\"border-b py-3 dark:border-gray-600 flex items-center cursor-pointer hover:bg-gray-900 px-3 transition-all ease-in-out\">\r\n                                            <span class=\"material-icons-outlined mr-2 text-xs text-red-700 font-bold\">\r\n                                                block\r\n                                            </span>\r\n                                            <span>Block this user</span>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                        <div\r\n                            className={`border rounded-full h-2 w-2 ${\r\n                                isActive ? 'bg-green-500' : 'bg-yellow-500'\r\n                            }`}\r\n                        ></div>\r\n                        <p className=\"mb-0.5 ml-2 text-xs group-hover:text-white dark:text-gray-200 text-gray-500 font-semibold pt-1 w-44 cursor-pointer truncate\">\r\n                            {isActive ? 'Active now' : 'Away'}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex items-center mb-4\">\r\n                {!isMobileWidth && (\r\n                    <>\r\n                        <span className=\"material-icons-outlined p-1.5 mr-1 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-800 transition-all ease-in-out\">\r\n                            search\r\n                        </span>\r\n                        <span\r\n                            onClick={toggleRightSidePanel}\r\n                            className=\"material-icons-outlined p-1.5 mr-1 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-800 transition-all ease-in-out\"\r\n                        >\r\n                            photo_library\r\n                        </span>\r\n                        <span className=\"material-icons-outlined p-1.5 mr-1 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-800 transition-all ease-in-out\">\r\n                            person_add_alt_1\r\n                        </span>\r\n                    </>\r\n                )}\r\n                <span className=\"material-icons-outlined p-1.5 mr-1 dark:text-white cursor-pointer border bg-blue-500 rounded-full border-gray-400 dark:border-gray-800 hover:bg-blue-800 text-white transition-all ease-in-out\">\r\n                    videocam\r\n                </span>\r\n                <span className=\"material-icons-outlined p-1.5 mr-1 dark:text-white cursor-pointer border bg-blue-500 rounded-full border-gray-400 dark:border-gray-800 hover:bg-blue-800 text-white transition-all ease-in-out\">\r\n                    call\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChattingHead;\r\n","import ChatArea from './ChatArea';\r\nimport ChattingHead from './ChattingHead';\r\n\r\nconst Chatting = ({\r\n    image,\r\n    isActive,\r\n    name,\r\n    closeUserChat,\r\n    isMobileWidth,\r\n    toggleRightSidePanel,\r\n}) => {\r\n    return (\r\n        <div className=\"w-full h-screen dark:bg-black p-4\">\r\n            <ChattingHead\r\n                image={image}\r\n                isActive={isActive}\r\n                name={name}\r\n                closeUserChat={closeUserChat}\r\n                isMobileWidth={isMobileWidth}\r\n                toggleRightSidePanel={toggleRightSidePanel}\r\n            />\r\n            <ChatArea image={image} isActive={isActive} name={name} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chatting;\r\n","import { useState } from 'react';\r\n\r\nconst ChatUser = ({ image, name, isActive, time, lastMsg, openUserChat }) => {\r\n    const [activeChat, setActiveChat] = useState(false);\r\n\r\n    return (\r\n        <div\r\n            className={`flex group justify-between mt-2 p-2 rounded-xl border dark:border-gray-800 hover:bg-gray-800 dark:hover:bg-gray-800 ${\r\n                activeChat ? 'bg-gray-800' : ''\r\n            } cursor-pointer transition-colors duration-100 ease-in-out hover:shadow-lg`}\r\n            onClick={() => {\r\n                openUserChat();\r\n                setActiveChat(!activeChat);\r\n            }}\r\n        >\r\n            <div className=\"flex justify-start items-center\">\r\n                <div className=\"border h-12 w-12 border-gray-400 dark:border-gray-800 rounded-full relative\">\r\n                    <img className=\"rounded-full\" src={image} alt=\"user\" />\r\n                    <div\r\n                        className={`absolute bottom-0 right-0 border rounded-full h-3 w-3 ${\r\n                            isActive ? 'bg-green-500' : 'bg-yellow-500'\r\n                        }`}\r\n                    ></div>\r\n                </div>\r\n                <div className=\"pl-2\">\r\n                    <p\r\n                        className={`mb-0 text-sm text-black group-hover:text-white ${\r\n                            activeChat ? 'text-white' : ''\r\n                        } dark:text-white`}\r\n                    >\r\n                        {name}\r\n                    </p>\r\n                    <p\r\n                        className={`mb-0 text-xs group-hover:text-white dark:text-gray-200 ${\r\n                            activeChat ? 'text-white' : ''\r\n                        } text-gray-500 font-semibold pt-1 w-44 cursor-pointer truncate`}\r\n                    >\r\n                        {lastMsg}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div\r\n                    className={`text-xs group-hover:text-white text-black ${\r\n                        activeChat ? 'text-white' : ''\r\n                    } dark:text-white w-14`}\r\n                >\r\n                    {time}\r\n                </div>\r\n                <div\r\n                    className={`bg-blue-700 text-white h-5 w-5 rounded-full mx-auto text-center mt-2`}\r\n                >\r\n                    2\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatUser;\r\n","import { Dropdown, Menu } from 'antd';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ChatUser from './ChatUser';\r\nimport DarkModeToggler from './DarkModeToggler';\r\n\r\nconst SidePanel = ({\r\n    dispatch,\r\n    logOut,\r\n    navigate,\r\n    featureHeight,\r\n    user,\r\n    chatListHeight,\r\n    openUserChat,\r\n}) => {\r\n    const [status, setStatus] = useState('Active');\r\n    const [onlineStatus, setOnlineStatus] = useState('active');\r\n\r\n    const menu = (\r\n        <Menu className=\"dark:bg-gray-800\">\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <Link to=\"/setting\">Setting</Link>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <p\r\n                    className=\"cursor-pointer mb-0\"\r\n                    onClick={() => {\r\n                        dispatch(logOut());\r\n                        navigate('/');\r\n                    }}\r\n                >\r\n                    Logout\r\n                </p>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    const statusDropDown = (\r\n        <Menu className=\"dark:bg-gray-800\">\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <p onClick={() => setStatus('Be right back')}>Be right back</p>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <p onClick={() => setStatus('Out of lunch')}>Out of lunch</p>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <p onClick={() => setStatus('Out for lunch')}>Out for lunch</p>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <p onClick={() => setStatus('In meetings')}>In meetings</p>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <p onClick={() => setStatus('At school')}>At school</p>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <p onClick={() => setStatus('At the movies')}>At the movies</p>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <p onClick={() => setStatus('Working from home')}>Working from home</p>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    const onlineStatusDropDown = (\r\n        <Menu className=\"dark:bg-gray-800\">\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <p\r\n                    onClick={() => setOnlineStatus('active')}\r\n                    className=\"flex justify-end items-center\"\r\n                >\r\n                    {onlineStatus === 'active' && (\r\n                        <span class=\"material-icons-outlined text-xs mr-2\">done</span>\r\n                    )}\r\n                    <span>Active</span>\r\n                </p>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <p\r\n                    onClick={() => setOnlineStatus('away')}\r\n                    className=\"flex justify-end items-center\"\r\n                >\r\n                    {onlineStatus === 'away' && (\r\n                        <span class=\"material-icons-outlined text-xs mr-2\">done</span>\r\n                    )}\r\n                    <span>Away</span>\r\n                </p>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <p\r\n                    onClick={() => setOnlineStatus('do not disturb')}\r\n                    className=\"flex justify-end items-center\"\r\n                >\r\n                    {onlineStatus === 'do not disturb' && (\r\n                        <span class=\"material-icons-outlined text-xs mr-2\">done</span>\r\n                    )}\r\n                    <span>Do not disturb</span>\r\n                </p>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div className=\"w-full lg:w-96 h-screen dark:bg-gray-900 dark:text-white border dark:border-gray-900\">\r\n            <div ref={featureHeight} className=\"px-3\">\r\n                {/* skype profile */}\r\n                <div className=\"flex justify-between items-center py-2\">\r\n                    <div className=\"flex justify-start items-center\">\r\n                        <div className=\"border h-12 w-12 border-gray-400 dark:border-gray-800 rounded-full relative\">\r\n                            {user?.details?.photo ? (\r\n                                <img\r\n                                    className=\"rounded-full h-12 w-12\"\r\n                                    src={user?.details?.photo}\r\n                                    alt=\"user\"\r\n                                />\r\n                            ) : (\r\n                                <img\r\n                                    className=\"rounded-full h-12 w-12\"\r\n                                    src={`https://ui-avatars.com/api/?name=${user?.details?.name}`}\r\n                                    alt=\"user\"\r\n                                />\r\n                            )}\r\n                            <Dropdown\r\n                                overlay={onlineStatusDropDown}\r\n                                placement=\"bottomRight\"\r\n                                trigger={['click']}\r\n                            >\r\n                                <div\r\n                                    className={`absolute bottom-0 right-0 border rounded-full h-3 w-3 cursor-pointer ${\r\n                                        onlineStatus === 'active'\r\n                                            ? 'bg-green-500'\r\n                                            : onlineStatus === 'away'\r\n                                            ? 'bg-yellow-400'\r\n                                            : 'bg-red-600'\r\n                                    }`}\r\n                                ></div>\r\n                            </Dropdown>\r\n                        </div>\r\n                        <div className=\"pl-2\">\r\n                            <p className=\"text-sm mb-0\">{user?.details?.name}</p>\r\n                            <Dropdown\r\n                                overlay={statusDropDown}\r\n                                placement=\"bottomRight\"\r\n                                trigger={['click']}\r\n                            >\r\n                                <p className=\"text-xs mb-0 dark:text-gray-200 text-gray-500 font-semibold pt-1 cursor-pointer\">\r\n                                    {status}\r\n                                </p>\r\n                            </Dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <DarkModeToggler />\r\n                    <Dropdown overlay={menu} placement=\"bottomRight\" trigger={['click']}>\r\n                        <span className=\"material-icons-outlined p-1 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-800 transition-all ease-in-out\">\r\n                            more_horiz\r\n                        </span>\r\n                    </Dropdown>\r\n                </div>\r\n\r\n                {/* search people area */}\r\n                <div className=\"flex justify-between items-center\">\r\n                    <div className=\"flex mr-3 items-center w-full dark:bg-gray-800 border dark:border-gray-800 border-gray-400 rounded-lg p-2 h-10\">\r\n                        <span className=\"material-icons-outlined dark:text-gray-200 font-thin\">\r\n                            search\r\n                        </span>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"People, groups, messages\"\r\n                            className=\"dark:text-white w-full text-xs pl-2 dark:bg-gray-800 focus:outline-none\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"p-2 border w-8 flex cursor-pointer rounded-lg justify-center items-center h-10 border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-800 transition-all ease-in-out\">\r\n                        <span className=\"material-icons-outlined text-xs\">dialpad</span>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* chat call notification navs */}\r\n                <div className=\"flex justify-between items-center mt-3\">\r\n                    <div className=\"flex-col group justify-center items-center cursor-pointer text-center\">\r\n                        <span className=\"border group-hover:text-white group-hover:border-purple-800 rounded-full p-2 group-hover:bg-purple-800 dark:group-hover:text-white dark:border-gray-800 material-icons-outlined text-xs transition-all ease-in-out\">\r\n                            chat\r\n                        </span>\r\n                        <p className=\"text-xs group-hover:text-purple-800 dark:group-hover:text-purple-300 dark:text-gray-200 text-gray-500 transition-all ease-in-out font-semibold pt-0\">\r\n                            Chats\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"flex-col group justify-center items-center cursor-pointer text-center\">\r\n                        <span className=\"border group-hover:text-white group-hover:border-purple-800 rounded-full p-2 group-hover:bg-purple-800 dark:group-hover:text-white dark:border-gray-800 material-icons-outlined text-xs transition-all ease-in-out\">\r\n                            call\r\n                        </span>\r\n                        <p className=\"text-xs group-hover:text-purple-800 dark:group-hover:text-purple-300 dark:text-gray-200 text-gray-500 transition-all ease-in-out font-semibold pt-0\">\r\n                            Calls\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"flex-col group justify-center items-center cursor-pointer text-center\">\r\n                        <span className=\"border group-hover:text-white group-hover:border-purple-800 rounded-full p-2 group-hover:bg-purple-800 dark:group-hover:text-white dark:border-gray-800 material-icons-outlined text-xs transition-all ease-in-out\">\r\n                            perm_contact_calendar\r\n                        </span>\r\n                        <p className=\"text-xs group-hover:text-purple-800 dark:group-hover:text-purple-300 dark:text-gray-200 text-gray-500 transition-all ease-in-out font-semibold pt-0\">\r\n                            Contacts\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"flex-col group justify-center items-center cursor-pointer text-center\">\r\n                        <span className=\"border group-hover:text-white group-hover:border-purple-800 rounded-full p-2 group-hover:bg-purple-800 dark:group-hover:text-white dark:border-gray-800 material-icons-outlined text-xs transition-all ease-in-out\">\r\n                            notifications\r\n                        </span>\r\n                        <p className=\"text-xs group-hover:text-purple-800 dark:group-hover:text-purple-300 dark:text-gray-200 text-gray-500 transition-all ease-in-out font-semibold pt-0\">\r\n                            Notifications\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* chatting and calling options */}\r\n                <div className=\"flex justify-between items-center mt-3\">\r\n                    <div className=\"flex justify-around mr-1.5 cursor-pointer items-center w-full dark:bg-gray-800 border dark:border-gray-800 border-gray-400 rounded-xl p-2 h-10\">\r\n                        <span className=\"material-icons-outlined dark:text-gray-200 font-thin text-xs\">\r\n                            videocam\r\n                        </span>\r\n                        <p className=\"dark:text-white pl-2 text-sm mb-0\">Meet now</p>\r\n                    </div>\r\n                    <div className=\"flex justify-around ml-1.5 cursor-pointer items-center w-full dark:bg-gray-800 border dark:border-gray-800 border-gray-400 rounded-xl p-2 h-10\">\r\n                        <span className=\"material-icons-outlined dark:text-gray-200 font-thin text-xs\">\r\n                            forum\r\n                        </span>\r\n                        <p className=\"dark:text-white pl-2 text-sm mb-0\">New Chat</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* chatting list */}\r\n            <div\r\n                className=\"overflow-y-auto mt-2 px-3 chatList\"\r\n                style={{ maxHeight: featureHeight.current ? `${chatListHeight}` : 'auto' }}\r\n            >\r\n                {[...Array(15)].map((_, index) => (\r\n                    <ChatUser\r\n                        key={index}\r\n                        image={`https://ui-avatars.com/api/?name=John+${index}`}\r\n                        name={'John ' + index}\r\n                        isActive={true}\r\n                        lastMsg=\"Call me back when you are free. Need to discuss about the project.\"\r\n                        time=\"4.22 PM\"\r\n                        openUserChat={openUserChat}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SidePanel;\r\n","import { Image } from 'antd';\r\n\r\nconst RightSidePanel = ({ toggleRightSidePanel }) => {\r\n    return (\r\n        <div className=\"px-4 pt-10 relative\">\r\n            <span\r\n                className=\"material-icons-outlined absolute top-2 left-0 p-2 mx-2 dark:bg-gray-800 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-black transition-all ease-in-out\"\r\n                onClick={toggleRightSidePanel}\r\n            >\r\n                close\r\n            </span>\r\n            <div className=\"h-screen overflow-y-scroll mt-4\">\r\n                {[...Array(20)].map((_, i) => {\r\n                    if (i % 2 === 0) {\r\n                        return (\r\n                            <div className=\"my-4 \">\r\n                                <p className=\"dark:text-gray-500 text-black mb-1\">You, 4.16 PM</p>\r\n                                <div className=\"w-full border dark:border-gray-800 rounded-xl flex justify-center p-2 shadow hover:shadow-lg transition-shadow ease-in-out duration-700\">\r\n                                    <Image\r\n                                        width=\"100%\"\r\n                                        className=\"rounded-xl w-full\"\r\n                                        src=\"https://picsum.photos/200/300\"\r\n                                        alt=\"pic\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div className=\"my-4 \">\r\n                            <p className=\"dark:text-gray-500 text-black mb-1\">You, 4.16 PM</p>\r\n                            <div className=\"w-full border dark:border-gray-800 rounded-xl flex justify-center p-5 shadow hover:shadow-lg transition-shadow ease-in-out duration-700 flex-col\">\r\n                                <p className=\"dark:text-gray-300 text-black text-lg\">\r\n                                    mediaQuery.css\r\n                                </p>\r\n                                <div className=\"flex items-center my-5\">\r\n                                    <span className=\"material-icons-outlined  mr-2\">\r\n                                        insert_drive_file\r\n                                    </span>\r\n                                    <span>File</span>\r\n                                </div>\r\n                                <hr className=\"dark:border-gray-800 border-gray-400 h-2\" />\r\n\r\n                                <a\r\n                                    href=\"#top\"\r\n                                    className=\"dark:text-gray-300 text-black text-lg text-center dark:hover:text-gray-400 transition-all hover:text-gray-400 ease-in-out duration-700\"\r\n                                >\r\n                                    Download\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RightSidePanel;\r\n","import { io } from 'socket.io-client';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logOut } from '../Redux/Actions/LoginAction';\r\nimport { useNavigate } from 'react-router';\r\nimport WelcomePage from '../Components/WelcomePage';\r\nimport Chatting from './../Components/Chatting';\r\nimport SidePanel from '../Components/SidePanel';\r\nimport RightSidePanel from '../Components/RightSidePanel';\r\n\r\nconst Dashboard = () => {\r\n    const [socketId, setSocketId] = useState('');\r\n    const [chatListHeight, setChatListHeight] = useState(0);\r\n    const [userChatOpen, setUserChatOpen] = useState(false);\r\n    const [isMobileWidth, setIsMobileWidth] = useState(false);\r\n    const [showFiles, setShowFiles] = useState(false);\r\n    const user = useSelector((state) => state.user);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const featureHeight = useRef(null);\r\n\r\n    useEffect(() => {\r\n        let socket = io('/');\r\n\r\n        if (featureHeight.current) {\r\n            if (window.innerWidth > 991) {\r\n                setChatListHeight(`calc(100vh - ${featureHeight.current.offsetHeight + 20}px)`);\r\n            } else {\r\n                setChatListHeight('auto');\r\n            }\r\n        }\r\n\r\n        if (window.innerWidth < 992) {\r\n            setIsMobileWidth(true);\r\n        } else {\r\n            setIsMobileWidth(false);\r\n        }\r\n\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerWidth < 992) {\r\n                setIsMobileWidth(true);\r\n            } else {\r\n                setIsMobileWidth(false);\r\n            }\r\n        });\r\n\r\n        socket.on('connect', () => {\r\n            setSocketId(socket.id);\r\n        });\r\n    }, [dispatch]);\r\n\r\n    // open a user chat\r\n    const openUserChat = (userId) => {\r\n        setUserChatOpen(true);\r\n    };\r\n    const closeUserChat = (userId) => {\r\n        setUserChatOpen(false);\r\n    };\r\n\r\n    const toggleRightSidePanel = () => {\r\n        setShowFiles(!showFiles);\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex-col lg:flex-row flex overflow-hidden\">\r\n            {isMobileWidth && !userChatOpen ? (\r\n                <SidePanel\r\n                    dispatch={dispatch}\r\n                    logOut={logOut}\r\n                    navigate={navigate}\r\n                    featureHeight={featureHeight}\r\n                    user={user}\r\n                    socketId={socketId}\r\n                    chatListHeight={chatListHeight}\r\n                    openUserChat={openUserChat}\r\n                />\r\n            ) : !isMobileWidth ? (\r\n                <SidePanel\r\n                    dispatch={dispatch}\r\n                    logOut={logOut}\r\n                    navigate={navigate}\r\n                    featureHeight={featureHeight}\r\n                    user={user}\r\n                    socketId={socketId}\r\n                    chatListHeight={chatListHeight}\r\n                    openUserChat={openUserChat}\r\n                />\r\n            ) : null}\r\n\r\n            {isMobileWidth && userChatOpen ? (\r\n                <div className=\"w-screen h-screen dark:bg-black dark:text-white\">\r\n                    {userChatOpen ? (\r\n                        <Chatting\r\n                            image={`https://ui-avatars.com/api/?name=John+Doe`}\r\n                            name={'John Doe'}\r\n                            isActive={true}\r\n                            openUserChat={openUserChat}\r\n                            closeUserChat={closeUserChat}\r\n                        />\r\n                    ) : (\r\n                        <WelcomePage img={user?.details?.photo} name={user?.details?.name} />\r\n                    )}\r\n                </div>\r\n            ) : !isMobileWidth ? (\r\n                <div className=\"w-screen h-screen dark:bg-black dark:text-white\">\r\n                    {userChatOpen ? (\r\n                        <Chatting\r\n                            image={`https://ui-avatars.com/api/?name=John+Doe`}\r\n                            name={'John Doe'}\r\n                            isActive={true}\r\n                            toggleRightSidePanel={toggleRightSidePanel}\r\n                        />\r\n                    ) : (\r\n                        <WelcomePage img={user?.details?.photo} name={user?.details?.name} />\r\n                    )}\r\n                </div>\r\n            ) : null}\r\n\r\n            {showFiles && (\r\n                <div\r\n                    className={` transition-all absolute right-0 w-full lg:w-72 top-0 ease-in-out h-screen duration-1000 dark:bg-gray-900 dark:text-white border dark:border-gray-900 overflow-hidden z-10 bg-white`}\r\n                >\r\n                    <RightSidePanel toggleRightSidePanel={toggleRightSidePanel} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { useSelector } from 'react-redux';\r\nimport { Navigate, useLocation } from 'react-router';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n    const userInfo = useSelector((state) => state.user);\r\n    const location = useLocation();\r\n\r\n    if (!userInfo?.details?._id) {\r\n        return <Navigate to=\"/\" state={{ from: location }} />;\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { Upload, Modal } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { useState } from 'react';\r\n\r\nconst Test = () => {\r\n    const [fileList, setFileList] = useState([]);\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n\r\n    const getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n    };\r\n\r\n    const handleCancel = () => setPreviewVisible(false);\r\n\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n        setPreviewVisible(true);\r\n    };\r\n\r\n    const handleChange = ({ fileList }) => setFileList(fileList);\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Upload\r\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                onPreview={handlePreview}\r\n                onChange={handleChange}\r\n            >\r\n                {fileList.length >= 8 ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n                visible={previewVisible}\r\n                title={previewTitle}\r\n                footer={null}\r\n                onCancel={handleCancel}\r\n            >\r\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n","import './App.css';\nimport { Route, Routes } from 'react-router';\nimport Login from './Screens/Login';\nimport Registration from './Screens/Registration';\nimport Dashboard from './Screens/Dashboard';\nimport ProtectedRoute from './Components/ProtectedRoute';\nimport Test from './Screens/Test';\n\nfunction App() {\n\n  return (\n    <Routes>\n      <Route path=\"/registration\" element={<Registration />} />\n      <Route path=\"/dashboard\" element={\n        <ProtectedRoute>\n          <Dashboard />\n        </ProtectedRoute>\n      }\n      />\n      <Route path=\"/test\" element={<Test />} />\n      <Route path=\"/\" element={<Login />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            // eslint-disable-next-line no-param-reassign\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://cra.link/PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://cra.link/PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { loginReducer } from './Reducers/LoginReducer';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nconst reducer = combineReducers({\r\n    user: loginReducer,\r\n});\r\n\r\nconst initialState = {\r\n    user: {\r\n        details: localStorage.getItem('token') ? jwt_decode(localStorage.getItem('token')) : null\r\n    }\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n    LOGIN_REQUEST,\r\n    LOGIN_REQUEST_FAILED,\r\n    LOGIN_REQUEST_SUCCESS,\r\n    LOGOUT,\r\n} from '../Constants/LoginConstants';\r\n\r\nexport const loginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST:\r\n            return { isLoading: true };\r\n        case LOGIN_REQUEST_SUCCESS:\r\n            return { isLoading: false, details: action.payload };\r\n        case LOGIN_REQUEST_FAILED:\r\n            return { isLoading: false, error: action.payload };\r\n        case LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport * as ServiceWorkerRegistration from './serviceWorkerRegistration';\nimport store from './Redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nServiceWorkerRegistration.register();\n"],"sourceRoot":""}