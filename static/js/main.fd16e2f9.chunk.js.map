{"version":3,"sources":["Components/DarkModeToggler.jsx","Redux/Constants/LoginConstants.jsx","Redux/Actions/LoginAction.jsx","Screens/Login.jsx","Screens/Registration.jsx","Components/WelcomePage.jsx","Components/ChatArea.jsx","Components/ChattingHead.jsx","Components/Chatting.jsx","Components/ChatUser.jsx","Components/SidePanel.jsx","Screens/Dashboard.jsx","Components/ProtectedRoute.jsx","App.js","reportWebVitals.js","Redux/store.js","Redux/Reducers/LoginReducer.jsx","index.js"],"names":["DarkModeToggler","useState","theme","setTheme","useEffect","localStorage","window","matchMedia","matches","document","documentElement","classList","add","setItem","remove","onClick","className","LOGIN_REQUEST","LOGIN_REQUEST_SUCCESS","LOGIN_REQUEST_FAILED","LOGOUT","logOut","dispatch","a","removeItem","type","Login","showPass","setShowPass","useDispatch","navigate","useNavigate","location","useLocation","useForm","register","handleSubmit","control","errors","formState","from","state","pathname","getItem","src","alt","onSubmit","data","token","user","jwt_decode","payload","JSON","stringify","error","response","message","autoComplete","required","render","field","email","placeholder","min","password","to","Registration","console","log","autocomplete","name","WelcomePage","img","TextArea","Input","ChatArea","image","chatAreaWidth","isActive","useRef","textArea","bottomAreaHeight","lastMessage","inputTextWidth","setInputTextWidth","textAreaParentHeight","setTextAreaParentHeight","bottomAreaFullHeight","setBottomAreaFullHeight","setMessage","isMobileWidth","setIsMobileWidth","showPicker","setShowPicker","useSelector","chatList","setChatList","audio","Audio","current","offsetWidth","offsetHeight","innerWidth","addEventListener","scrollIntoView","behavior","block","menu","Item","target","rel","href","messageOptions","ref","style","maxHeight","height","map","chat","index","timestamp","overlay","trigger","length","details","photo","width","val","title","centered","visible","onOk","pickerStyle","onEmojiClick","event","emojiObject","prevInput","emoji","value","onChange","e","onKeyPress","key","preventDefault","previous","Date","toLocaleDateString","hour","minute","setTimeout","play","autoSize","maxRows","minRows","placement","arrow","ChattingHead","closeUserChat","class","fontSize","Chatting","ChatUser","time","lastMsg","openUserChat","activeChat","setActiveChat","SidePanel","featureHeight","chatListHeight","Array","_","Dashboard","socketId","setSocketId","setChatListHeight","userChatOpen","setUserChatOpen","socket","io","on","id","userId","ProtectedRoute","children","userInfo","_id","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","isLoading","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fd16e2f9.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nconst DarkModeToggler = () => {\r\n    const [theme, setTheme] = useState('dark');\r\n\r\n    useEffect(() => {\r\n        if (\r\n            localStorage.theme === 'dark' ||\r\n            (!('theme' in localStorage) &&\r\n                window.matchMedia('(prefers-color-scheme: dark)').matches)\r\n        ) {\r\n            document.documentElement.classList.add('dark');\r\n        } else {\r\n            localStorage.setItem('theme', 'light');\r\n            document.documentElement.classList.remove('dark');\r\n        }\r\n    }, [theme]);\r\n\r\n    return (\r\n        <span\r\n            onClick={() => {\r\n                setTheme(theme === 'dark' ? 'light' : 'dark');\r\n                localStorage.setItem('theme', theme === 'dark' ? 'light' : 'dark');\r\n            }}\r\n            className=\"material-icons-outlined cursor-pointer hover:text-gray-700 dark:text-white dark:hover:text-gray-300 transition-all ease-in-out\"\r\n        >\r\n            {localStorage.theme === 'dark' ||\r\n            (!('theme' in localStorage) &&\r\n                window.matchMedia('(prefers-color-scheme: dark)').matches)\r\n                ? 'light_mode'\r\n                : 'nightlight_round'}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default DarkModeToggler;\r\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILED = 'LOGIN_REQUEST_FAILED';\r\nexport const LOGOUT = 'LOGOUT';\r\n","// import axios from 'axios';\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_REQUEST_FAILED,\r\n    LOGIN_REQUEST_SUCCESS,\r\n    LOGOUT,\r\n} from '../Constants/LoginConstants';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const login = (postData) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: LOGIN_REQUEST,\r\n        });\r\n\r\n        // let { data: tokenData } = await axios.post('/vendor/login', postData);\r\n\r\n        // let token = tokenData.data.refreshToken;\r\n\r\n        let token =\r\n            'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTQ4OGU4YjUyNTFhMmVhMGQwMTcyNTAiLCJuYW1lIjoiTWlzcyBEb3JlZW4gR3JpbWVzIiwiZW1haWwiOiJNYXJjaWEzNEBob3RtYWlsLmNvbSIsInBob3RvIjoiaHR0cDovL3BsYWNlaW1nLmNvbS82NDAvNDgwL2J1c2luZXNzIiwidHlwZSI6InZlbmRvciIsImlhdCI6MTYzNDMyMDQwMSwiZXhwIjoxNjY1ODc4MDAxfQ.kG7fQ2XY6yz1qIQ4IYbGHDCxxBFTmdXIlWrED-YY3Ck';\r\n\r\n        let user = jwt_decode(token);\r\n\r\n        dispatch({\r\n            type: LOGIN_REQUEST_SUCCESS,\r\n            payload: user,\r\n        });\r\n\r\n        localStorage.setItem('token', JSON.stringify(token));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGIN_REQUEST_FAILED,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const logOut = () => async (dispatch) => {\r\n    localStorage.removeItem('token');\r\n    dispatch({\r\n        type: LOGOUT,\r\n    });\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport DarkModeToggler from '../Components/DarkModeToggler';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../Redux/Actions/LoginAction';\r\n\r\nconst Login = () => {\r\n    const [showPass, setShowPass] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        control,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    let from = location.state?.from?.pathname || '/dashboard';\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('token')) {\r\n            navigate(from);\r\n        }\r\n    }, [navigate, from]);\r\n\r\n    const onSubmit = (data) => {\r\n        dispatch(login(data));\r\n        navigate(from);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dark:bg-gray-900 bg-white h-screen w-screen dark:text-white flex justify-center items-center\">\r\n            <div className=\"mx-2 lg:mx-0 bg-white lg:w-96 shadow-2xl p-9 border border-gray-200 dark:border-gray-900 rounded-xl dark:bg-gray-800\">\r\n                <div className=\"flex justify-end items-center\">\r\n                    <DarkModeToggler />\r\n                </div>\r\n                <div className=\"flex justify-center items-center mb-6\">\r\n                    <img className=\"h-20\" src=\"/logo.png\" alt=\"logo\" />\r\n                </div>\r\n                <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                    <Controller\r\n                        {...register('email', { required: true })}\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <div\r\n                                className={`flex px-2 h-11 items-center border ${\r\n                                    errors.email\r\n                                        ? 'border-red-500'\r\n                                        : 'border-gray-400 dark:border-gray-900'\r\n                                } rounded-lg mt-4 mb-2`}\r\n                            >\r\n                                <span className=\"material-icons-outlined mr-2\">email</span>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    {...field}\r\n                                    className=\"dark:text-white w-full dark:bg-gray-800 focus:outline-none\"\r\n                                    placeholder=\"Your Email\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    />\r\n                    {errors.email && <p className=\"text-red-500 mb-2\">Email is required</p>}\r\n\r\n                    <Controller\r\n                        {...register('password', { required: true, min: 6 })}\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <div\r\n                                className={`flex px-2 h-11 items-center border ${\r\n                                    errors.password\r\n                                        ? 'border-red-500'\r\n                                        : 'border-gray-400 dark:border-gray-900'\r\n                                } rounded-lg mt-4 mb-2`}\r\n                            >\r\n                                <span className=\"material-icons-outlined mr-2\">vpn_key</span>\r\n                                <input\r\n                                    {...field}\r\n                                    type={showPass ? 'text' : 'password'}\r\n                                    className=\"dark:text-white w-full dark:bg-gray-800 focus:outline-none\"\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                                <span\r\n                                    className=\"material-icons-outlined mr-2 cursor-pointer\"\r\n                                    onClick={() => setShowPass(!showPass)}\r\n                                >\r\n                                    {showPass ? 'visibility_off' : 'visibility'}\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    />\r\n                    {errors.password && <p className=\"text-red-500 mb-2\">Password is required</p>}\r\n\r\n                    <button\r\n                        className=\"h-11 border hover:text-white border-gray-400 dark:border-gray-900 rounded-lg w-full hover:bg-gray-900 transition-all ease-in-out\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Login\r\n                    </button>\r\n\r\n                    <div className=\"flex justify-between items-center my-4\">\r\n                        <p>Not have account?</p>\r\n                        <Link\r\n                            to=\"/registration\"\r\n                            className=\"hover:text-gray-600 dark:hover:text-gray-300 dark:text-white transition-all ease-in-out\"\r\n                        >\r\n                            Sign Up\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import { Link, useNavigate } from 'react-router-dom';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport DarkModeToggler from '../Components/DarkModeToggler';\r\nimport { useState } from 'react';\r\n\r\nconst Registration = () => {\r\n    const [showPass, setShowPass] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        control,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    const onSubmit = (data) => {\r\n        navigate('/dashboard');\r\n        console.log(data);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dark:bg-gray-900 bg-white h-screen w-screen dark:text-white flex justify-center items-center\">\r\n            <div className=\"mx-2 lg:mx-0 bg-white lg:w-96 shadow-2xl p-9 border border-gray-200 dark:border-gray-900 rounded-xl dark:bg-gray-800\">\r\n                <div className=\"flex justify-end items-center\">\r\n                    <DarkModeToggler />\r\n                </div>\r\n                <div className=\"flex justify-center items-center mb-6\">\r\n                    <img className=\"h-20\" src=\"/logo.png\" alt=\"logo\" />\r\n                </div>\r\n                <form onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\r\n                    <Controller\r\n                        {...register('name', { required: true })}\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <div\r\n                                className={`flex px-2 h-11 items-center border ${\r\n                                    errors.name\r\n                                        ? 'border-red-500'\r\n                                        : 'border-gray-200 dark:border-gray-900'\r\n                                } rounded-lg mt-4 mb-2`}\r\n                            >\r\n                                <span className=\"material-icons-outlined mr-2\">person</span>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    {...field}\r\n                                    className=\"dark:text-white w-full dark:bg-gray-800 focus:outline-none\"\r\n                                    placeholder=\"Your Name\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    />\r\n                    {errors.name && <p className=\"text-red-500 mb-2\">Name is required</p>}\r\n\r\n                    <Controller\r\n                        {...register('email', { required: true })}\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <div\r\n                                className={`flex px-2 h-11 items-center border ${\r\n                                    errors.email\r\n                                        ? 'border-red-500'\r\n                                        : 'border-gray-400 dark:border-gray-900'\r\n                                } rounded-lg mt-4 mb-2`}\r\n                            >\r\n                                <span className=\"material-icons-outlined mr-2\">email</span>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    {...field}\r\n                                    className=\"dark:text-white w-full dark:bg-gray-800 focus:outline-none\"\r\n                                    placeholder=\"Your Email\"\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    />\r\n                    {errors.email && <p className=\"text-red-500 mb-2\">Email is required</p>}\r\n\r\n                    <Controller\r\n                        {...register('password', { required: true, min: 6 })}\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <div\r\n                                className={`flex px-2 h-11 items-center border ${\r\n                                    errors.password\r\n                                        ? 'border-red-500'\r\n                                        : 'border-gray-400 dark:border-gray-900'\r\n                                } rounded-lg mt-4 mb-2`}\r\n                            >\r\n                                <span className=\"material-icons-outlined mr-2\">vpn_key</span>\r\n                                <input\r\n                                    {...field}\r\n                                    type={showPass ? 'text' : 'password'}\r\n                                    className=\"dark:text-white w-full dark:bg-gray-800 focus:outline-none\"\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                                <span\r\n                                    className=\"material-icons-outlined mr-2 cursor-pointer\"\r\n                                    onClick={() => setShowPass(!showPass)}\r\n                                >\r\n                                    {showPass ? 'visibility_off' : 'visibility'}\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    />\r\n                    {errors.password && <p className=\"text-red-500 mb-2\">Password is required</p>}\r\n\r\n                    <button\r\n                        className=\"h-11 border hover:text-white border-gray-400 dark:border-gray-900 rounded-lg w-full hover:bg-gray-900 transition-all ease-in-out\"\r\n                        type=\"submit\"\r\n                    >\r\n                        Login\r\n                    </button>\r\n\r\n                    <div className=\"flex justify-between items-center my-4\">\r\n                        <p>Already registered?</p>\r\n                        <Link\r\n                            to=\"/\"\r\n                            className=\"hover:text-gray-600 dark:hover:text-gray-300 dark:text-white transition-all ease-in-out\"\r\n                        >\r\n                            Sign In\r\n                        </Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registration;\r\n","const WelcomePage = ({ img, name }) => {\r\n    return (\r\n        <div className=\"w-full h-screen dark:bg-gray-700 flex justify-center items-center\">\r\n            <div className=\"flex justify-start items-center\">\r\n                <div className=\"border h-20 w-20 border-gray-400 dark:border-gray-800 rounded-full relative\">\r\n                    {img ? (\r\n                        <img className=\"rounded-full h-20 w-20\" src={img} alt=\"user\" />\r\n                    ) : (\r\n                        <img\r\n                            className=\"rounded-full h-20 w-20\"\r\n                            src={`https://ui-avatars.com/api/?name=${name}`}\r\n                            alt=\"user\"\r\n                        />\r\n                    )}\r\n\r\n                    <div className=\"absolute bottom-0 right-0 border rounded-full h-5 w-5 bg-green-500\"></div>\r\n                </div>\r\n                <div className=\"pl-2\">\r\n                    <p className=\"text-4xl mb-0 font-thin\">Welcome !</p>\r\n                    <p className=\"text-3xl mb-0 dark:text-gray-200 text-gray-500 font-semibold pt-1 cursor-pointer\">\r\n                        {name}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WelcomePage;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { Menu, Dropdown, Input, Modal } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\nimport Picker from 'emoji-picker-react';\r\nconst { TextArea } = Input;\r\n\r\nconst ChatArea = ({ image, isActive, name }) => {\r\n    const chatAreaWidth = useRef(0);\r\n    const textArea = useRef(0);\r\n    const bottomAreaHeight = useRef(0);\r\n    const lastMessage = useRef(null);\r\n    const [inputTextWidth, setInputTextWidth] = useState(0);\r\n    const [textAreaParentHeight, setTextAreaParentHeight] = useState(0);\r\n    const [bottomAreaFullHeight, setBottomAreaFullHeight] = useState(0);\r\n    const [message, setMessage] = useState('');\r\n    const [isMobileWidth, setIsMobileWidth] = useState(false);\r\n    const [showPicker, setShowPicker] = useState(false);\r\n    const user = useSelector((state) => state.user);\r\n    const [chatList, setChatList] = useState([]);\r\n\r\n    let audio = new Audio('/message.mp3');\r\n\r\n    useEffect(() => {\r\n        setInputTextWidth(chatAreaWidth.current.offsetWidth);\r\n        setTextAreaParentHeight(textArea.current.offsetHeight);\r\n        setBottomAreaFullHeight(bottomAreaHeight.current.offsetHeight);\r\n\r\n        if (window.innerWidth < 992) {\r\n            setIsMobileWidth(true);\r\n        } else {\r\n            setIsMobileWidth(false);\r\n        }\r\n\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerWidth < 992) {\r\n                setIsMobileWidth(true);\r\n            } else {\r\n                setIsMobileWidth(false);\r\n            }\r\n        });\r\n\r\n        lastMessage.current?.scrollIntoView({ behavior: 'smooth', block: 'end' });\r\n    }, [textArea, bottomAreaHeight, textAreaParentHeight, chatAreaWidth, chatList]);\r\n\r\n    const onEmojiClick = (event, emojiObject) => {\r\n        setMessage((prevInput) => prevInput + emojiObject.emoji);\r\n    };\r\n\r\n    const sendMessage = (e) => {\r\n        if (e.key === 'Enter' || e.key === 'NumpadEnter') {\r\n            e.preventDefault();\r\n            setMessage('');\r\n            setChatList((previous) => [\r\n                ...previous,\r\n                {\r\n                    from: 'Sazzad',\r\n                    message: message,\r\n                    timestamp: new Date().toLocaleDateString('en-US', {\r\n                        hour: 'numeric',\r\n                        minute: 'numeric',\r\n                    }),\r\n                },\r\n            ]);\r\n\r\n            setTimeout(() => {\r\n                setChatList((previous) => [\r\n                    ...previous,\r\n                    {\r\n                        from: 'John Doe',\r\n                        message: message,\r\n                        timestamp: new Date().toLocaleDateString('en-US', {\r\n                            hour: 'numeric',\r\n                            minute: 'numeric',\r\n                        }),\r\n                    },\r\n                ]);\r\n                audio.play();\r\n            }, 2000);\r\n        }\r\n    };\r\n\r\n    const menu = (\r\n        <Menu className=\"dark:bg-gray-800\">\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\r\n                    1st menu item\r\n                </a>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.aliyun.com\">\r\n                    2nd menu item\r\n                </a>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.luohanacademy.com\">\r\n                    3rd menu item\r\n                </a>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    const messageOptions = (\r\n        <Menu className=\"dark:bg-gray-800\">\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\" key=\"1\">\r\n                Copy\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\" key=\"2\">\r\n                Quote\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\" key=\"3\">\r\n                Forward\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\" key=\"3\">\r\n                Select Message\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div\r\n            className=\"container lg:container xl:container 2xl:container mx-auto h-screen relative\"\r\n            ref={chatAreaWidth}\r\n        >\r\n            {/* chat message area */}\r\n            <div\r\n                className=\"overflow-auto mt-5\"\r\n                style={{\r\n                    maxHeight: `calc(100vh - ${bottomAreaFullHeight + 110}px)`,\r\n                    height: `calc(100vh - ${bottomAreaFullHeight + 110}px)`,\r\n                }}\r\n            >\r\n                {chatList.map((chat, index) => (\r\n                    <div key={index}>\r\n                        {chat.from === 'John Doe' ? (\r\n                            <>\r\n                                {/* Others message */}\r\n                                <div className=\"flex mb-5\">\r\n                                    <div className=\"h-9 w-9 lg:h-11 lg:w-11 border-gray-400 dark:border-gray-800 rounded-full\">\r\n                                        <img\r\n                                            className=\"rounded-full h-9 w-9 lg:h-11 lg:w-11\"\r\n                                            src={image}\r\n                                            alt=\"user\"\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <div className=\"dark:text-gray-500 px-2\">\r\n                                            {chat.timestamp}\r\n                                        </div>\r\n                                        <Dropdown\r\n                                            overlay={messageOptions}\r\n                                            trigger={['contextMenu']}\r\n                                        >\r\n                                            <div className=\"ml-2 p-3 max-w-xs lg:max-w-lg xl:max-w-xl border dark:border-gray-800 rounded-tl-none rounded-xl dark:bg-gray-800\">\r\n                                                {chat.message}\r\n                                            </div>\r\n                                        </Dropdown>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {console.log(index, chatList.length)}\r\n                                {/* my message */}\r\n                                <div className=\"flex mb-5 justify-end\">\r\n                                    <div>\r\n                                        <div className=\"dark:text-gray-500 px-3 flex justify-end\">\r\n                                            {chat.timestamp}\r\n                                        </div>\r\n                                        <Dropdown\r\n                                            overlay={messageOptions}\r\n                                            trigger={['contextMenu']}\r\n                                        >\r\n                                            <div className=\"mr-2 p-3 max-w-xs lg:max-w-lg xl:max-w-xl ml-auto flex border dark:border-gray-800 rounded-tr-none rounded-xl dark:bg-gray-800\">\r\n                                                {chat.message}\r\n                                            </div>\r\n                                        </Dropdown>\r\n                                        {index === chat.length && (\r\n                                            <div className=\"h-5 w-5 mr-2 border-gray-400 ml-auto dark:border-gray-800 rounded-full\">\r\n                                                <img\r\n                                                    className=\"rounded-full h-5 w-5\"\r\n                                                    src={image}\r\n                                                    alt=\"user\"\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"h-9 w-9 lg:h-11 lg:w-11 border-gray-400 dark:border-gray-800 rounded-full\">\r\n                                        <img\r\n                                            className=\"rounded-full h-9 w-9 lg:h-11 lg:w-11\"\r\n                                            src={user?.details?.photo}\r\n                                            alt=\"user\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                        <div ref={lastMessage} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* input text area */}\r\n            <div\r\n                className=\" py-2 sticky bottom-0 left-0 right-0 dark:bg-black\"\r\n                ref={bottomAreaHeight}\r\n            >\r\n                <div className=\"flex justify-between\">\r\n                    <div\r\n                        className=\"flex dark:bg-gray-800 border dark:border-gray-800 rounded-xl overflow-x-hidden\"\r\n                        style={{\r\n                            width: inputTextWidth * (3 / 4),\r\n                        }}\r\n                    >\r\n                        <div>\r\n                            <span\r\n                                onClick={() => setShowPicker((val) => !val)}\r\n                                className=\"material-icons-outlined p-2 mr-1 cursor-pointer rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-900 transition-all ease-in-out\"\r\n                            >\r\n                                sentiment_satisfied\r\n                            </span>\r\n                            <Modal\r\n                                title=\"Select Emoji\"\r\n                                centered\r\n                                visible={showPicker}\r\n                                onOk={() => setShowPicker(false)}\r\n                            >\r\n                                <Picker\r\n                                    pickerStyle={{ width: '100%' }}\r\n                                    onEmojiClick={onEmojiClick}\r\n                                />\r\n                            </Modal>\r\n                        </div>\r\n\r\n                        <TextArea\r\n                            ref={textArea}\r\n                            value={message}\r\n                            type=\"text\"\r\n                            placeholder=\"Type a message\"\r\n                            className=\"dark:text-white focus:border-none hover:border-none p-6 text-xl h-11  border dark:border-gray-800 dark:bg-gray-800 focus:outline-none rounded-xl\"\r\n                            style={{\r\n                                width: inputTextWidth * (3 / 4) - 30,\r\n                            }}\r\n                            onChange={(e) => setMessage(e.target.value)}\r\n                            onKeyPress={sendMessage}\r\n                            autoSize={{ maxRows: 5, minRows: 5 }}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        {!isMobileWidth ? (\r\n                            <>\r\n                                <span className=\"material-icons-outlined p-2 mx-2 dark:bg-gray-800 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-black transition-all ease-in-out\">\r\n                                    attach_file\r\n                                </span>\r\n                                <span className=\"material-icons-outlined p-2 mx-2 dark:bg-gray-800 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-black transition-all ease-in-out\">\r\n                                    contact_mail\r\n                                </span>\r\n                            </>\r\n                        ) : (\r\n                            <Dropdown overlay={menu} placement=\"topRight\" arrow>\r\n                                <span className=\"material-icons-outlined p-2 mx-2 bg-gray-800 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-black transition-all ease-in-out\">\r\n                                    more_horiz\r\n                                </span>\r\n                            </Dropdown>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatArea;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst ChattingHead = ({ image, isActive, name, closeUserChat }) => {\r\n    const [isMobileWidth, setIsMobileWidth] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (window.innerWidth < 992) {\r\n            setIsMobileWidth(true);\r\n        } else {\r\n            setIsMobileWidth(false);\r\n        }\r\n\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerWidth < 992) {\r\n                setIsMobileWidth(true);\r\n            } else {\r\n                setIsMobileWidth(false);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"flex justify-between items-center border-b dark:border-gray-500\">\r\n            <div className=\"flex items-center mb-4\">\r\n                <span\r\n                    class=\"visible w-auto lg:invisible lg:w-0 material-icons-outlined p-1.5 mr-3 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-800 transition-all ease-in-out\"\r\n                    onClick={closeUserChat}\r\n                >\r\n                    west\r\n                </span>\r\n                <div className=\"h-12 w-12 border-gray-400 dark:border-gray-800 rounded-full\">\r\n                    <img className=\"rounded-full h-11 w-11\" src={image} alt=\"user\" />\r\n                </div>\r\n                <div className=\"pl-2 w-32 lg:w-auto\">\r\n                    <div className=\"flex items-center\">\r\n                        <p className=\"mb-0 w-24 lg:w-auto truncate text-lg text-black group-hover:text-white dark:text-white\">\r\n                            {name}\r\n                        </p>\r\n                        <span\r\n                            className=\"material-icons-outlined ml-1 cursor-pointer hover:text-gray-400 transition-colors duration-700 ease-in-out\"\r\n                            style={{ fontSize: 15 }}\r\n                        >\r\n                            settings\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                        <div\r\n                            className={`border rounded-full h-2 w-2 ${\r\n                                isActive ? 'bg-green-500' : 'bg-yellow-500'\r\n                            }`}\r\n                        ></div>\r\n                        <p className=\"mb-0.5 ml-2 text-xs group-hover:text-white dark:text-gray-200 text-gray-500 font-semibold pt-1 w-44 cursor-pointer truncate\">\r\n                            {isActive ? 'Active now' : 'Away'}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex items-center mb-4\">\r\n                {!isMobileWidth && (\r\n                    <>\r\n                        <span className=\"material-icons-outlined p-1.5 mr-1 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-800 transition-all ease-in-out\">\r\n                            search\r\n                        </span>\r\n                        <span className=\"material-icons-outlined p-1.5 mr-1 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-800 transition-all ease-in-out\">\r\n                            photo_library\r\n                        </span>\r\n                        <span className=\"material-icons-outlined p-1.5 mr-1 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-800 transition-all ease-in-out\">\r\n                            person_add_alt_1\r\n                        </span>\r\n                    </>\r\n                )}\r\n                <span className=\"material-icons-outlined p-1.5 mr-1 dark:text-white cursor-pointer border bg-blue-500 rounded-full border-gray-400 dark:border-gray-800 hover:bg-blue-800 text-white transition-all ease-in-out\">\r\n                    videocam\r\n                </span>\r\n                <span className=\"material-icons-outlined p-1.5 mr-1 dark:text-white cursor-pointer border bg-blue-500 rounded-full border-gray-400 dark:border-gray-800 hover:bg-blue-800 text-white transition-all ease-in-out\">\r\n                    call\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChattingHead;\r\n","import ChatArea from './ChatArea';\r\nimport ChattingHead from './ChattingHead';\r\n\r\nconst Chatting = ({ image, isActive, name, closeUserChat, isMobileWidth }) => {\r\n    return (\r\n        <div className=\"w-full h-screen dark:bg-black p-4\">\r\n            <ChattingHead\r\n                image={image}\r\n                isActive={isActive}\r\n                name={name}\r\n                closeUserChat={closeUserChat}\r\n                isMobileWidth={isMobileWidth}\r\n            />\r\n            <ChatArea image={image} isActive={isActive} name={name} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chatting;\r\n","import { useState } from 'react';\r\n\r\nconst ChatUser = ({ image, name, isActive, time, lastMsg, openUserChat }) => {\r\n    const [activeChat, setActiveChat] = useState(false);\r\n\r\n    return (\r\n        <div\r\n            className={`flex group justify-between mt-2 p-2 rounded-xl border dark:border-gray-800 hover:bg-gray-800 dark:hover:bg-gray-800 ${\r\n                activeChat ? 'bg-gray-800' : ''\r\n            } cursor-pointer transition-colors duration-100 ease-in-out hover:shadow-lg`}\r\n            onClick={() => {\r\n                openUserChat();\r\n                setActiveChat(!activeChat);\r\n            }}\r\n        >\r\n            <div className=\"flex justify-start items-center\">\r\n                <div className=\"border h-12 w-12 border-gray-400 dark:border-gray-800 rounded-full relative\">\r\n                    <img className=\"rounded-full\" src={image} alt=\"user\" />\r\n                    <div\r\n                        className={`absolute bottom-0 right-0 border rounded-full h-3 w-3 ${\r\n                            isActive ? 'bg-green-500' : 'bg-yellow-500'\r\n                        }`}\r\n                    ></div>\r\n                </div>\r\n                <div className=\"pl-2\">\r\n                    <p\r\n                        className={`mb-0 text-sm text-black group-hover:text-white ${\r\n                            activeChat ? 'text-white' : ''\r\n                        } dark:text-white`}\r\n                    >\r\n                        {name}\r\n                    </p>\r\n                    <p\r\n                        className={`mb-0 text-xs group-hover:text-white dark:text-gray-200 ${\r\n                            activeChat ? 'text-white' : ''\r\n                        } text-gray-500 font-semibold pt-1 w-44 cursor-pointer truncate`}\r\n                    >\r\n                        {lastMsg}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div\r\n                    className={`text-xs group-hover:text-white text-black ${\r\n                        activeChat ? 'text-white' : ''\r\n                    } dark:text-white w-14`}\r\n                >\r\n                    {time}\r\n                </div>\r\n                <div\r\n                    className={`bg-blue-700 text-white h-5 w-5 rounded-full mx-auto text-center mt-2`}\r\n                >\r\n                    2\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatUser;\r\n","import { Dropdown, Menu } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport ChatUser from './ChatUser';\r\nimport DarkModeToggler from './DarkModeToggler';\r\n\r\nconst SidePanel = ({\r\n    dispatch,\r\n    logOut,\r\n    navigate,\r\n    featureHeight,\r\n    user,\r\n    chatListHeight,\r\n    openUserChat,\r\n}) => {\r\n    const menu = (\r\n        <Menu className=\"dark:bg-gray-800\">\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <Link to=\"/setting\">Setting</Link>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <p\r\n                    className=\"cursor-pointer mb-0\"\r\n                    onClick={() => {\r\n                        dispatch(logOut());\r\n                        navigate('/');\r\n                    }}\r\n                >\r\n                    Logout\r\n                </p>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div className=\"w-full lg:w-96 h-screen dark:bg-gray-900 dark:text-white border dark:border-gray-900\">\r\n            <div ref={featureHeight} className=\"px-3\">\r\n                {/* skype profile */}\r\n                <div className=\"flex justify-between items-center py-2\">\r\n                    <div className=\"flex justify-start items-center\">\r\n                        <div className=\"border h-12 w-12 border-gray-400 dark:border-gray-800 rounded-full relative\">\r\n                            {user?.details?.photo ? (\r\n                                <img\r\n                                    className=\"rounded-full h-12 w-12\"\r\n                                    src={user?.details?.photo}\r\n                                    alt=\"user\"\r\n                                />\r\n                            ) : (\r\n                                <img\r\n                                    className=\"rounded-full h-12 w-12\"\r\n                                    src={`https://ui-avatars.com/api/?name=${user?.details?.name}`}\r\n                                    alt=\"user\"\r\n                                />\r\n                            )}\r\n\r\n                            <div className=\"absolute bottom-0 right-0 border rounded-full h-3 w-3 bg-green-500\"></div>\r\n                        </div>\r\n                        <div className=\"pl-2\">\r\n                            <p className=\"text-sm mb-0\">{user?.details?.name}</p>\r\n                            <p className=\"text-xs mb-0 dark:text-gray-200 text-gray-500 font-semibold pt-1 cursor-pointer\">\r\n                                Set a status\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <DarkModeToggler />\r\n                    <Dropdown overlay={menu} placement=\"bottomRight\" arrow>\r\n                        <span className=\"material-icons-outlined p-1 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-800 transition-all ease-in-out\">\r\n                            more_horiz\r\n                        </span>\r\n                    </Dropdown>\r\n                </div>\r\n\r\n                {/* search people area */}\r\n                <div className=\"flex justify-between items-center\">\r\n                    <div className=\"flex mr-3 items-center w-full dark:bg-gray-800 border dark:border-gray-800 border-gray-400 rounded-lg p-2 h-10\">\r\n                        <span className=\"material-icons-outlined dark:text-gray-200 font-thin\">\r\n                            search\r\n                        </span>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"People, groups, messages\"\r\n                            className=\"dark:text-white w-full text-xs pl-2 dark:bg-gray-800 focus:outline-none\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"p-2 border w-8 flex cursor-pointer rounded-lg justify-center items-center h-10 border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-800 transition-all ease-in-out\">\r\n                        <span className=\"material-icons-outlined text-xs\">dialpad</span>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* chat call notification navs */}\r\n                <div className=\"flex justify-between items-center mt-3\">\r\n                    <div className=\"flex-col group justify-center items-center cursor-pointer text-center\">\r\n                        <span className=\"border group-hover:text-white group-hover:border-purple-800 rounded-full p-2 group-hover:bg-purple-800 dark:group-hover:text-white dark:border-gray-800 material-icons-outlined text-xs transition-all ease-in-out\">\r\n                            chat\r\n                        </span>\r\n                        <p className=\"text-xs group-hover:text-purple-800 dark:group-hover:text-purple-300 dark:text-gray-200 text-gray-500 transition-all ease-in-out font-semibold pt-0\">\r\n                            Chats\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"flex-col group justify-center items-center cursor-pointer text-center\">\r\n                        <span className=\"border group-hover:text-white group-hover:border-purple-800 rounded-full p-2 group-hover:bg-purple-800 dark:group-hover:text-white dark:border-gray-800 material-icons-outlined text-xs transition-all ease-in-out\">\r\n                            call\r\n                        </span>\r\n                        <p className=\"text-xs group-hover:text-purple-800 dark:group-hover:text-purple-300 dark:text-gray-200 text-gray-500 transition-all ease-in-out font-semibold pt-0\">\r\n                            Calls\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"flex-col group justify-center items-center cursor-pointer text-center\">\r\n                        <span className=\"border group-hover:text-white group-hover:border-purple-800 rounded-full p-2 group-hover:bg-purple-800 dark:group-hover:text-white dark:border-gray-800 material-icons-outlined text-xs transition-all ease-in-out\">\r\n                            perm_contact_calendar\r\n                        </span>\r\n                        <p className=\"text-xs group-hover:text-purple-800 dark:group-hover:text-purple-300 dark:text-gray-200 text-gray-500 transition-all ease-in-out font-semibold pt-0\">\r\n                            Contacts\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"flex-col group justify-center items-center cursor-pointer text-center\">\r\n                        <span className=\"border group-hover:text-white group-hover:border-purple-800 rounded-full p-2 group-hover:bg-purple-800 dark:group-hover:text-white dark:border-gray-800 material-icons-outlined text-xs transition-all ease-in-out\">\r\n                            notifications\r\n                        </span>\r\n                        <p className=\"text-xs group-hover:text-purple-800 dark:group-hover:text-purple-300 dark:text-gray-200 text-gray-500 transition-all ease-in-out font-semibold pt-0\">\r\n                            Notifications\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* chatting and calling options */}\r\n                <div className=\"flex justify-between items-center mt-3\">\r\n                    <div className=\"flex justify-around mr-1.5 cursor-pointer items-center w-full dark:bg-gray-800 border dark:border-gray-800 border-gray-400 rounded-xl p-2 h-10\">\r\n                        <span className=\"material-icons-outlined dark:text-gray-200 font-thin text-xs\">\r\n                            videocam\r\n                        </span>\r\n                        <p className=\"dark:text-white pl-2 text-sm mb-0\">Meet now</p>\r\n                    </div>\r\n                    <div className=\"flex justify-around ml-1.5 cursor-pointer items-center w-full dark:bg-gray-800 border dark:border-gray-800 border-gray-400 rounded-xl p-2 h-10\">\r\n                        <span className=\"material-icons-outlined dark:text-gray-200 font-thin text-xs\">\r\n                            forum\r\n                        </span>\r\n                        <p className=\"dark:text-white pl-2 text-sm mb-0\">New Chat</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* chatting list */}\r\n            <div\r\n                className=\"overflow-y-auto mt-2 px-3 chatList\"\r\n                style={{ maxHeight: featureHeight.current ? `${chatListHeight}` : 'auto' }}\r\n            >\r\n                {[...Array(15)].map((_, index) => (\r\n                    <ChatUser\r\n                        key={index}\r\n                        image={`https://ui-avatars.com/api/?name=John+${index}`}\r\n                        name={'John ' + index}\r\n                        isActive={true}\r\n                        lastMsg=\"Call me back when you are free. Need to discuss about the project.\"\r\n                        time=\"4.22 PM\"\r\n                        openUserChat={openUserChat}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SidePanel;\r\n","import { io } from 'socket.io-client';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logOut } from '../Redux/Actions/LoginAction';\r\nimport { useNavigate } from 'react-router';\r\nimport WelcomePage from '../Components/WelcomePage';\r\nimport Chatting from './../Components/Chatting';\r\nimport SidePanel from '../Components/SidePanel';\r\n\r\nconst Dashboard = () => {\r\n    const [socketId, setSocketId] = useState('');\r\n    const [chatListHeight, setChatListHeight] = useState(0);\r\n    const [userChatOpen, setUserChatOpen] = useState(false);\r\n    const [isMobileWidth, setIsMobileWidth] = useState(false);\r\n    const user = useSelector((state) => state.user);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const featureHeight = useRef(null);\r\n\r\n    useEffect(() => {\r\n        let socket = io('/');\r\n\r\n        if (featureHeight.current) {\r\n            if (window.innerWidth > 991) {\r\n                setChatListHeight(`calc(100vh - ${featureHeight.current.offsetHeight + 20}px)`);\r\n            } else {\r\n                setChatListHeight('auto');\r\n            }\r\n        }\r\n\r\n        if (window.innerWidth < 992) {\r\n            setIsMobileWidth(true);\r\n        } else {\r\n            setIsMobileWidth(false);\r\n        }\r\n\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerWidth < 992) {\r\n                setIsMobileWidth(true);\r\n            } else {\r\n                setIsMobileWidth(false);\r\n            }\r\n        });\r\n\r\n        socket.on('connect', () => {\r\n            setSocketId(socket.id);\r\n        });\r\n    }, [dispatch]);\r\n\r\n    // open a user chat\r\n    const openUserChat = (userId) => {\r\n        setUserChatOpen(true);\r\n    };\r\n    const closeUserChat = (userId) => {\r\n        setUserChatOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex-col lg:flex-row flex overflow-hidden\">\r\n            {isMobileWidth && !userChatOpen ? (\r\n                <SidePanel\r\n                    dispatch={dispatch}\r\n                    logOut={logOut}\r\n                    navigate={navigate}\r\n                    featureHeight={featureHeight}\r\n                    user={user}\r\n                    socketId={socketId}\r\n                    chatListHeight={chatListHeight}\r\n                    openUserChat={openUserChat}\r\n                />\r\n            ) : !isMobileWidth ? (\r\n                <SidePanel\r\n                    dispatch={dispatch}\r\n                    logOut={logOut}\r\n                    navigate={navigate}\r\n                    featureHeight={featureHeight}\r\n                    user={user}\r\n                    socketId={socketId}\r\n                    chatListHeight={chatListHeight}\r\n                    openUserChat={openUserChat}\r\n                />\r\n            ) : null}\r\n\r\n            {isMobileWidth && userChatOpen ? (\r\n                <div className=\"w-screen h-screen dark:bg-black dark:text-white\">\r\n                    {userChatOpen ? (\r\n                        <Chatting\r\n                            image={`https://ui-avatars.com/api/?name=John+Doe`}\r\n                            name={'John Doe'}\r\n                            isActive={true}\r\n                            openUserChat={openUserChat}\r\n                            closeUserChat={closeUserChat}\r\n                        />\r\n                    ) : (\r\n                        <WelcomePage img={user?.details?.photo} name={user?.details?.name} />\r\n                    )}\r\n                </div>\r\n            ) : !isMobileWidth ? (\r\n                <div className=\"w-screen h-screen dark:bg-black dark:text-white\">\r\n                    {userChatOpen ? (\r\n                        <Chatting\r\n                            image={`https://ui-avatars.com/api/?name=John+Doe`}\r\n                            name={'John Doe'}\r\n                            isActive={true}\r\n                        />\r\n                    ) : (\r\n                        <WelcomePage img={user?.details?.photo} name={user?.details?.name} />\r\n                    )}\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { useSelector } from 'react-redux';\r\nimport { Navigate, useLocation } from 'react-router';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n    const userInfo = useSelector((state) => state.user);\r\n    const location = useLocation();\r\n\r\n    if (!userInfo?.details?._id) {\r\n        return <Navigate to=\"/\" state={{ from: location }} />;\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import './App.css';\nimport { Route, Routes } from 'react-router';\nimport Login from './Screens/Login';\nimport Registration from './Screens/Registration';\nimport Dashboard from './Screens/Dashboard';\nimport ProtectedRoute from './Components/ProtectedRoute';\n\nfunction App() {\n\n  return (\n    <Routes>\n      <Route path=\"/registration\" element={<Registration />} />\n      <Route path=\"/dashboard\" element={\n        <ProtectedRoute>\n          <Dashboard />\n        </ProtectedRoute>\n      }\n      />\n      <Route path=\"/\" element={<Login />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { loginReducer } from './Reducers/LoginReducer';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nconst reducer = combineReducers({\r\n    user: loginReducer,\r\n});\r\n\r\nconst initialState = {\r\n    user: {\r\n        details: localStorage.getItem('token') ? jwt_decode(localStorage.getItem('token')) : null\r\n    }\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n    LOGIN_REQUEST,\r\n    LOGIN_REQUEST_FAILED,\r\n    LOGIN_REQUEST_SUCCESS,\r\n    LOGOUT,\r\n} from '../Constants/LoginConstants';\r\n\r\nexport const loginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST:\r\n            return { isLoading: true };\r\n        case LOGIN_REQUEST_SUCCESS:\r\n            return { isLoading: false, details: action.payload };\r\n        case LOGIN_REQUEST_FAILED:\r\n            return { isLoading: false, error: action.payload };\r\n        case LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport store from './Redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}