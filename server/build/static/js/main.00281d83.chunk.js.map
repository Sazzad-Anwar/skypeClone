{"version":3,"sources":["Components/DarkModeToggler.jsx","Redux/Constants/LoginConstants.jsx","Redux/Actions/LoginAction.jsx","Screens/Login.jsx","Screens/Registration.jsx","Components/WelcomePage.jsx","Components/ChatArea.jsx","Components/Modal.jsx","Components/ChattingHead.jsx","Components/Chatting.jsx","Components/ChatUser.jsx","Components/SidePanel.jsx","Components/RightSidePanel.jsx","Redux/Constants/UserDetails.jsx","Redux/Constants/ChatUsersContants.jsx","Components/socketRedux.jsx","Screens/Dashboard.jsx","Redux/Actions/UserAction.jsx","Redux/Actions/ChatUsersAction.jsx","Components/ProtectedRoute.jsx","Screens/Test.jsx","App.js","reportWebVitals.js","serviceWorkerRegistration.js","Redux/Constants/MessageConstants.jsx","Redux/store.js","Redux/Reducers/LoginReducer.jsx","Redux/Reducers/UserReducer.jsx","Redux/Reducers/ChatUsersReducer.jsx","Redux/Reducers/MessageReducers.jsx","index.js"],"names":["DarkModeToggler","useState","theme","setTheme","useEffect","localStorage","window","matchMedia","matches","document","documentElement","classList","add","setItem","remove","onClick","className","LOGIN_REQUEST","LOGIN_REQUEST_SUCCESS","LOGIN_REQUEST_FAILED","LOGOUT","REGISTRATION_REQUEST","REGISTRATION_REQUEST_SUCCESS","REGISTRATION_REQUEST_FAILED","logOut","dispatch","a","removeItem","type","Login","showPass","setShowPass","useDispatch","navigate","useNavigate","location","useLocation","user","useSelector","state","useForm","register","handleSubmit","errors","formState","from","pathname","_id","replace","src","alt","onSubmit","data","postData","axios","post","token","jwt_decode","payload","JSON","stringify","response","message","autoComplete","required","email","placeholder","password","error","to","Registration","showConfirmPass","setShowConfirmPass","pass","setPass","confPass","setConfPass","get","details","setTimeout","reload","name","phone","onChange","e","target","value","confirmPassword","WelcomePage","img","TextArea","Input","ChatArea","chattingUser","chatAreaWidth","useRef","textArea","bottomAreaHeight","lastMessage","pickFile","setPickFile","inputTextWidth","setInputTextWidth","textAreaParentHeight","setTextAreaParentHeight","bottomAreaFullHeight","setBottomAreaFullHeight","setMessage","isMobileWidth","setIsMobileWidth","showPicker","setShowPicker","socket","chatList","setChatList","fileList","setFileList","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","current","offsetWidth","offsetHeight","innerWidth","addEventListener","scrollIntoView","behavior","block","on","prevChatList","off","chats","emit","sender","receiver","messageSendHandler","trim","messageDetails","socketId","file","replyTo","updatedAt","Date","toLocaleDateString","hour","minute","previous","menu","Item","rel","href","copyMsg","msg","navigator","clipboard","writeText","antMessage","success","getBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handlePreview","url","preview","originFileObj","substring","lastIndexOf","uploadButton","PlusOutlined","style","marginTop","ref","maxHeight","height","map","chat","index","image","overlay","trigger","length","photo","width","action","listType","onPreview","multiple","visible","title","footer","onCancel","val","centered","onOk","pickerStyle","onEmojiClick","event","emojiObject","prevInput","emoji","onKeyPress","key","preventDefault","autoSize","maxRows","minRows","placement","arrow","Modal","children","showUserDetailsModal","aria-labelledby","role","aria-modal","aria-hidden","ChattingHead","closeUserChat","toggleRightSidePanel","setShowUserDetailsModal","fontSize","isActive","Chatting","ChatUser","userDetails","openUserChat","userMessage","activeChat","setActiveChat","showMessageCount","setShowMessageCount","toLocaleTimeString","SidePanel","featureHeight","chatListHeight","chatUsers","status","setStatus","onlineStatus","setOnlineStatus","activeNav","setActiveNav","messageList","setMessageList","audio","Audio","Object","keys","prev","play","statusDropDown","onlineStatusDropDown","class","filter","m","RightSidePanel","Array","_","i","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAILURE","CHAT_USERS","SOCKET","Dashboard","setChatListHeight","userChatOpen","setUserChatOpen","showFiles","setShowFiles","userList","setUserList","chattingUserDetails","setChattingUserDetails","id","io","disconnect","users","u","console","log","chatUsersAction","userId","find","ProtectedRoute","Test","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","CHAT_MESSAGES","reducer","combineReducers","isLoading","messages","initialState","getItem","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","getElementById","URL","process","origin","fetch","headers","contentType","indexOf","ready","unregister","checkValidServiceWorker","ServiceWorkerRegistration"],"mappings":"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","file":"static/js/main.00281d83.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nconst DarkModeToggler = () => {\r\n    const [theme, setTheme] = useState('dark');\r\n\r\n    useEffect(() => {\r\n        if (\r\n            localStorage.theme === 'dark' ||\r\n            (!('theme' in localStorage) &&\r\n                window.matchMedia('(prefers-color-scheme: dark)').matches)\r\n        ) {\r\n            document.documentElement.classList.add('dark');\r\n        } else {\r\n            localStorage.setItem('theme', 'light');\r\n            document.documentElement.classList.remove('dark');\r\n        }\r\n    }, [theme]);\r\n\r\n    return (\r\n        <span\r\n            onClick={() => {\r\n                setTheme(theme === 'dark' ? 'light' : 'dark');\r\n                localStorage.setItem('theme', theme === 'dark' ? 'light' : 'dark');\r\n            }}\r\n            className=\"material-icons-outlined cursor-pointer hover:text-gray-700 dark:text-white dark:hover:text-gray-300 transition-all ease-in-out\"\r\n        >\r\n            {localStorage.theme === 'dark' ||\r\n            (!('theme' in localStorage) &&\r\n                window.matchMedia('(prefers-color-scheme: dark)').matches)\r\n                ? 'light_mode'\r\n                : 'nightlight_round'}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default DarkModeToggler;\r\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_REQUEST_SUCCESS = 'LOGIN_REQUEST_SUCCESS';\r\nexport const LOGIN_REQUEST_FAILED = 'LOGIN_REQUEST_FAILED';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REGISTRATION_REQUEST = 'REGISTRATION_REQUEST';\r\nexport const REGISTRATION_REQUEST_SUCCESS = 'REGISTRATION_REQUEST_SUCCESS';\r\nexport const REGISTRATION_REQUEST_FAILED = 'REGISTRATION_REQUEST_FAILED';\r\n","import {\r\n    LOGIN_REQUEST,\r\n    LOGIN_REQUEST_FAILED,\r\n    LOGIN_REQUEST_SUCCESS,\r\n    LOGOUT,\r\n    REGISTRATION_REQUEST,\r\n    REGISTRATION_REQUEST_SUCCESS,\r\n    REGISTRATION_REQUEST_FAILED,\r\n} from '../Constants/LoginConstants';\r\nimport jwt_decode from 'jwt-decode';\r\nimport axios from 'axios';\r\n\r\nexport const login = (postData) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: LOGIN_REQUEST,\r\n        });\r\n\r\n        let {\r\n            data: { token },\r\n        } = await axios.post('/api/v1/login', postData);\r\n\r\n        let user = jwt_decode(token);\r\n\r\n        dispatch({\r\n            type: LOGIN_REQUEST_SUCCESS,\r\n            payload: user,\r\n        });\r\n\r\n        localStorage.setItem('token', JSON.stringify(token));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGIN_REQUEST_FAILED,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const registrationAction = (postData) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: REGISTRATION_REQUEST,\r\n        });\r\n\r\n        let {\r\n            data: { token },\r\n        } = await axios.post('/api/v1/registration', postData);\r\n\r\n        let user = jwt_decode(token);\r\n\r\n        let {\r\n            data: { data },\r\n        } = await axios.get(`/api/v1/user/${user.details._id}`);\r\n\r\n        dispatch({\r\n            type: REGISTRATION_REQUEST_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        localStorage.setItem('token', JSON.stringify(token));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: REGISTRATION_REQUEST_FAILED,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const logOut = () => async (dispatch) => {\r\n    localStorage.removeItem('token');\r\n    dispatch({\r\n        type: LOGOUT,\r\n    });\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport DarkModeToggler from '../Components/DarkModeToggler';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../Redux/Actions/LoginAction';\r\n\r\nconst Login = () => {\r\n    const [showPass, setShowPass] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const user = useSelector((state) => state.user);\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    let from = location.state?.from?.pathname || '/dashboard';\r\n\r\n    useEffect(() => {\r\n        if (user && user._id) {\r\n            navigate(from, { replace: true });\r\n        }\r\n    }, [navigate, from, user]);\r\n\r\n    const loginData = (data) => {\r\n        dispatch(login(data));\r\n        navigate(from, { replace: true });\r\n    };\r\n\r\n    return (\r\n        <div className=\"dark:bg-gray-900 bg-white px-4 md:px-0 h-screen w-screen dark:text-white flex justify-center items-center lg:items-start lg:pt-56\">\r\n            <div>\r\n                <div className=\"flex justify-center items-center mb-6\">\r\n                    <img\r\n                        className=\"\"\r\n                        src=\"https://logincdn.msauth.net/shared/1.0/content/images/applogos/44_08ed657e48f1458641b5f879d82004cd.png\"\r\n                        alt=\"logo\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"bg-white shadow-md px-11 lg:mx-0 w-screen sm:w-96  py-12 border border-gray-200 dark:border-gray-900 dark:bg-gray-800 relative\">\r\n                    <div className=\"absolute right-2 top-2\">\r\n                        <DarkModeToggler />\r\n                    </div>\r\n                    <img\r\n                        className=\"mb-4\"\r\n                        src=\"https://logincdn.msauth.net/shared/1.0/content/images/microsoft_logo_ee5c8d9fb6248c938fd0dc19370e90bd.svg\"\r\n                        alt=\"mircrosoft\"\r\n                    />\r\n                    <h1 className=\"text-2xl font-semibold dark:text-white \">Sign in</h1>\r\n                    <p>to continue to skype</p>\r\n                    <form onSubmit={handleSubmit(loginData)} autoComplete=\"off\">\r\n                        <div className=\"mt-6 mb-4\">\r\n                            <input\r\n                                {...register('email', { required: true })}\r\n                                type=\"email\"\r\n                                className={`focus:outline-none dark:bg-gray-800 ${\r\n                                    errors.email\r\n                                        ? 'focus:border-red-500 dark:focus:border-red-500'\r\n                                        : 'focus:border-blue-500'\r\n                                }  border-black dark:border-gray-400 transition duration-200 ease-in-out border-b w-full pb-2 text-sm`}\r\n                                placeholder=\"Email\"\r\n                            />\r\n                            {errors.email && <p className=\"text-red-500 my-2\">Email is required</p>}\r\n                        </div>\r\n\r\n                        <div className=\"mb-4 relative\">\r\n                            <div className={`flex items-center justify-between  w-full pb-1`}>\r\n                                <input\r\n                                    {...register('password', { required: true })}\r\n                                    type={showPass ? 'text' : 'password'}\r\n                                    className={`focus:outline-none dark:bg-gray-800 pr-6 ${\r\n                                        errors.password\r\n                                            ? 'focus:border-red-500 dark:focus:border-red-500'\r\n                                            : 'focus:border-blue-500'\r\n                                    }  border-black dark:border-gray-400 transition duration-200 ease-in-out border-b w-full pb-2 text-sm`}\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                                <div className=\"absolute right-0 cursor-pointer\">\r\n                                    <span\r\n                                        className=\"material-icons-outlined mr-2\"\r\n                                        onClick={() => setShowPass(!showPass)}\r\n                                    >\r\n                                        {showPass ? 'visibility_off' : 'visibility'}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            {errors.password && (\r\n                                <p className=\"text-red-500 my-2\">Password is required</p>\r\n                            )}\r\n                        </div>\r\n                        {user && user.error && (\r\n                            <p className=\"bg-red-800 text-white py-2 text-center\">{user.error}</p>\r\n                        )}\r\n                        <div className=\"flex\">\r\n                            <p className=\"dark:text-white\">No account?</p>\r\n                            <Link\r\n                                to=\"/registration\"\r\n                                className=\"ml-2 text-blue-500 hover:text-gray-600 dark:hover:text-white\"\r\n                            >\r\n                                Create One\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"flex justify-end mt-4\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"px-9 py-1.5 hover:bg-blue-900 bg-blue-800 transition duration-200 ease-in-out text-white \"\r\n                            >\r\n                                Go\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport DarkModeToggler from '../Components/DarkModeToggler';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { registrationAction } from '../Redux/Actions/LoginAction';\r\n\r\nconst Registration = () => {\r\n    const [showPass, setShowPass] = useState(false);\r\n    const [showConfirmPass, setShowConfirmPass] = useState(false);\r\n    const [pass, setPass] = useState('');\r\n    const [confPass, setConfPass] = useState('');\r\n    const user = useSelector((state) => state.user);\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    let from = location.state?.from?.pathname || '/dashboard';\r\n\r\n    useEffect(() => {\r\n        if (user && user._id) {\r\n            navigate(from);\r\n        }\r\n    }, [navigate, from, user, dispatch]);\r\n\r\n    const onSubmit = (data) => {\r\n        dispatch(registrationAction(data));\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 1000);\r\n    };\r\n\r\n    return (\r\n        <div className=\"dark:bg-gray-900 overflow-hidden bg-white h-screen w-screen dark:text-white flex justify-center items-center lg:items-start lg:pt-40\">\r\n            <div>\r\n                <div className=\"flex justify-center items-center mb-6\">\r\n                    <img\r\n                        className=\"\"\r\n                        src=\"https://logincdn.msauth.net/shared/1.0/content/images/applogos/44_08ed657e48f1458641b5f879d82004cd.png\"\r\n                        alt=\"logo\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"bg-white shadow-md px-11 mx-2 lg:mx-0 w-screen lg:w-96  py-12 border border-gray-200 dark:border-gray-900 dark:bg-gray-800 relative\">\r\n                    <div className=\"absolute right-2 top-2\">\r\n                        <DarkModeToggler />\r\n                    </div>\r\n                    <img\r\n                        className=\"mb-4\"\r\n                        src=\"https://logincdn.msauth.net/shared/1.0/content/images/microsoft_logo_ee5c8d9fb6248c938fd0dc19370e90bd.svg\"\r\n                        alt=\"mircrosoft\"\r\n                    />\r\n                    <h1 className=\"text-2xl font-semibold dark:text-white \">Sign in</h1>\r\n                    <p>to continue to skype</p>\r\n                    <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                        <div className=\"mt-6 mb-4\">\r\n                            <input\r\n                                {...register('name', { required: true })}\r\n                                type=\"text\"\r\n                                className={`focus:outline-none dark:bg-gray-800 ${\r\n                                    errors.email ? 'focus:border-red-500' : 'focus:border-blue-500'\r\n                                }  border-black dark:border-gray-400 transition duration-200 ease-in-out border-b w-full pb-2 text-sm`}\r\n                                placeholder=\"Name\"\r\n                            />\r\n                            {errors.name && <p className=\"text-red-500 my-1\">Name is required</p>}\r\n                        </div>\r\n\r\n                        <div className=\"mb-4\">\r\n                            <input\r\n                                {...register('email', { required: true })}\r\n                                type=\"email\"\r\n                                className={`focus:outline-none dark:bg-gray-800 ${\r\n                                    errors.email ? 'focus:border-red-500' : 'focus:border-blue-500'\r\n                                }  border-black dark:border-gray-400 transition duration-200 ease-in-out border-b w-full pb-2 text-sm`}\r\n                                placeholder=\"Email\"\r\n                            />\r\n                            {errors.email && <p className=\"text-red-500 my-1\">Email is required</p>}\r\n                        </div>\r\n\r\n                        <div className=\"mb-4\">\r\n                            <input\r\n                                {...register('phone', { required: true })}\r\n                                type=\"tel\"\r\n                                className={`focus:outline-none dark:bg-gray-800 ${\r\n                                    errors.email ? 'focus:border-red-500' : 'focus:border-blue-500'\r\n                                }  border-black dark:border-gray-400 transition duration-200 ease-in-out border-b w-full pb-2 text-sm`}\r\n                                placeholder=\"Phone Number\"\r\n                            />\r\n                            {errors.phone && (\r\n                                <p className=\"text-red-500 my-1\">Phone number is required</p>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"mb-4 relative\">\r\n                            <div className={`flex items-center justify-between  w-full pb-1`}>\r\n                                <input\r\n                                    {...register('password', { required: true })}\r\n                                    type={showPass ? 'text' : 'password'}\r\n                                    onChange={(e) => setPass(e.target.value)}\r\n                                    value={pass}\r\n                                    className={`focus:outline-none dark:bg-gray-800 pr-6 ${\r\n                                        errors.confirmPassword ||\r\n                                        errors.confirmPassword !== errors.password\r\n                                            ? 'focus:border-red-500 dark:focus:border-red-500'\r\n                                            : 'focus:border-blue-500'\r\n                                    }  border-black dark:border-gray-400 transition duration-200 ease-in-out border-b w-full pb-2 text-sm`}\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                                <div className=\"absolute right-0 cursor-pointer\">\r\n                                    <span\r\n                                        className=\"material-icons-outlined mr-2\"\r\n                                        onClick={() => setShowPass(!showPass)}\r\n                                    >\r\n                                        {showPass ? 'visibility_off' : 'visibility'}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            {errors.password && (\r\n                                <p className=\"text-red-500 my-1\">Password is required</p>\r\n                            )}\r\n                            {!errors.confirmPassword && confPass !== pass && (\r\n                                <p className=\"text-red-500 my-1\">Password do not match</p>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"mb-4 relative\">\r\n                            <div className={`flex items-center justify-between  w-full pb-1`}>\r\n                                <input\r\n                                    {...register('confirmPassword', { required: true })}\r\n                                    onChange={(e) => setConfPass(e.target.value)}\r\n                                    value={confPass}\r\n                                    type={showConfirmPass ? 'text' : 'password'}\r\n                                    className={`focus:outline-none dark:bg-gray-800 pr-6 ${\r\n                                        errors.confirmPassword ||\r\n                                        errors.confirmPassword !== errors.password\r\n                                            ? 'focus:border-red-500 dark:focus:border-red-500'\r\n                                            : 'focus:border-blue-500'\r\n                                    }  border-black dark:border-gray-400 transition duration-200 ease-in-out border-b w-full pb-2 text-sm`}\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                                <div className=\"absolute right-0 cursor-pointer\">\r\n                                    <span\r\n                                        className=\"material-icons-outlined mr-2\"\r\n                                        onClick={() => setShowConfirmPass(!showConfirmPass)}\r\n                                    >\r\n                                        {showConfirmPass ? 'visibility_off' : 'visibility'}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            {errors.confirmPassword && (\r\n                                <p className=\"text-red-500 my-1\">Password is required</p>\r\n                            )}\r\n                            {!errors.confirmPassword && confPass !== pass && (\r\n                                <p className=\"text-red-500 my-1\">Password do not match</p>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"flex\">\r\n                            <p className=\"dark:text-white\">Already have account?</p>\r\n                            <Link\r\n                                to=\"/\"\r\n                                className=\"ml-2 text-blue-500 hover:text-gray-600 dark:hover:text-white\"\r\n                            >\r\n                                Sign In\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"flex justify-end mt-4\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"px-9 py-1.5 hover:bg-blue-900 bg-blue-800 transition duration-200 ease-in-out text-white \"\r\n                            >\r\n                                Sign Up\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Registration;\r\n","const WelcomePage = ({ img, name }) => {\r\n    return (\r\n        <div className=\"w-full h-screen dark:bg-gray-700 flex justify-center items-center\">\r\n            <div className=\"flex justify-start items-center\">\r\n                <div className=\"border h-20 w-20 border-gray-400 dark:border-gray-800 rounded-full relative\">\r\n                    {img ? (\r\n                        <img className=\"rounded-full h-20 w-20\" src={img} alt=\"user\" />\r\n                    ) : (\r\n                        <img\r\n                            className=\"rounded-full h-20 w-20\"\r\n                            src={`https://ui-avatars.com/api/?name=${name}`}\r\n                            alt=\"user\"\r\n                        />\r\n                    )}\r\n\r\n                    <div className=\"absolute bottom-0 right-0 border rounded-full h-5 w-5 bg-green-500\"></div>\r\n                </div>\r\n                <div className=\"pl-2\">\r\n                    <p className=\"text-4xl mb-0 font-thin\">Welcome !</p>\r\n                    <p className=\"text-3xl mb-0 dark:text-gray-200 text-gray-500 font-semibold pt-1 cursor-pointer\">\r\n                        {name}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WelcomePage;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { Menu, Dropdown, Input, Modal, Upload, message as antMessage } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Picker from 'emoji-picker-react';\r\n// import { messagesAction } from '../Redux/Actions/MessageActions';\r\n// import { SocketContext } from './Socket';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst ChatArea = ({ chattingUser }) => {\r\n    const chatAreaWidth = useRef(0);\r\n    const textArea = useRef(0);\r\n    const bottomAreaHeight = useRef(0);\r\n    const dispatch = useDispatch();\r\n    const lastMessage = useRef(null);\r\n    const [pickFile, setPickFile] = useState(false);\r\n    const [inputTextWidth, setInputTextWidth] = useState(0);\r\n    const [textAreaParentHeight, setTextAreaParentHeight] = useState(0);\r\n    const [bottomAreaFullHeight, setBottomAreaFullHeight] = useState(0);\r\n    const [message, setMessage] = useState('');\r\n    const [isMobileWidth, setIsMobileWidth] = useState(false);\r\n    const [showPicker, setShowPicker] = useState(false);\r\n    const { details } = useSelector((state) => state.details);\r\n    // const socket = useContext(SocketContext);\r\n    const socket = useSelector((state) => state.socket);\r\n    const [chatList, setChatList] = useState([]);\r\n    const [fileList, setFileList] = useState([]);\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n\r\n    useEffect(() => {\r\n        setInputTextWidth(chatAreaWidth.current.offsetWidth);\r\n        setTextAreaParentHeight(textArea.current.offsetHeight);\r\n        setBottomAreaFullHeight(bottomAreaHeight.current.offsetHeight);\r\n\r\n        if (window.innerWidth < 992) {\r\n            setIsMobileWidth(true);\r\n        } else {\r\n            setIsMobileWidth(false);\r\n        }\r\n\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerWidth < 992) {\r\n                setIsMobileWidth(true);\r\n            } else {\r\n                setIsMobileWidth(false);\r\n            }\r\n        });\r\n\r\n        lastMessage.current?.scrollIntoView({ behavior: 'smooth', block: 'end' });\r\n    }, [textArea, bottomAreaHeight, textAreaParentHeight, chatAreaWidth, chatList]);\r\n\r\n    const onEmojiClick = (event, emojiObject) => {\r\n        setMessage((prevInput) => prevInput + emojiObject.emoji);\r\n    };\r\n\r\n    useEffect(() => {\r\n        socket.on('message', (message) => {\r\n            setChatList((prevChatList) => [...prevChatList, message]);\r\n            // dispatch(messagesAction([...chatList, message]));\r\n        });\r\n\r\n        return () => {\r\n            socket.off();\r\n        };\r\n    }, [chatList, dispatch, socket]);\r\n\r\n    useEffect(() => {\r\n        socket.on('chat', (chats) => {\r\n            setChatList(chats);\r\n            // dispatch(messagesAction(chats));\r\n        });\r\n\r\n        socket.emit('get-chat', { sender: chattingUser.email, receiver: details.email });\r\n\r\n        return () => {\r\n            socket.off();\r\n        };\r\n    }, [chattingUser.email, details.email, socket]);\r\n\r\n    //send message handler\r\n    const messageSendHandler = () => {\r\n        if (message.trim() !== '') {\r\n            let messageDetails = {\r\n                sender: details?.email,\r\n                receiver: chattingUser.email,\r\n                socketId: chattingUser.socketId,\r\n                message: message,\r\n                file: '',\r\n                replyTo: '',\r\n                updatedAt: new Date().toLocaleDateString('en-US', {\r\n                    hour: 'numeric',\r\n                    minute: 'numeric',\r\n                }),\r\n            };\r\n            setChatList((previous) => [...previous, messageDetails]);\r\n            // dispatch(messagesAction([...chatList, messageDetails]));\r\n            setMessage('');\r\n            socket.emit('message', messageDetails);\r\n            socket.emit('to-all', messageDetails);\r\n        }\r\n    };\r\n\r\n    // send message\r\n    const sendMessage = (e) => {\r\n        if (e.key === 'Enter' || e.key === 'NumpadEnter') {\r\n            e.preventDefault();\r\n            messageSendHandler();\r\n        }\r\n    };\r\n\r\n    // dropdown menu for mobile view\r\n    const menu = (\r\n        <Menu className=\"dark:bg-gray-800\">\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\r\n                    1st menu item\r\n                </a>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.aliyun.com\">\r\n                    2nd menu item\r\n                </a>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.luohanacademy.com\">\r\n                    3rd menu item\r\n                </a>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    //copy a message\r\n    const copyMsg = (msg) => {\r\n        navigator.clipboard.writeText(msg);\r\n        antMessage.success('Message copied to clipboard');\r\n    };\r\n\r\n    // get image in base64\r\n    const getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n    };\r\n\r\n    const handleCancel = () => setPreviewVisible(false);\r\n\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n        setPreviewVisible(true);\r\n    };\r\n\r\n    const handleChange = ({ fileList }) => setFileList(fileList);\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div style={{ marginTop: 8 }}>Select</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div\r\n            className=\"container lg:container xl:container 2xl:container mx-auto h-screen relative\"\r\n            ref={chatAreaWidth}\r\n        >\r\n            {/* chat message area */}\r\n            <div\r\n                className=\"overflow-auto mt-5\"\r\n                style={{\r\n                    maxHeight: `calc(100vh - ${bottomAreaFullHeight + 110}px)`,\r\n                    height: `calc(100vh - ${bottomAreaFullHeight + 110}px)`,\r\n                }}\r\n            >\r\n                {chatList.map((chat, index) => (\r\n                    <div key={index}>\r\n                        {chat.receiver === details?.email ? (\r\n                            <>\r\n                                {/* Others message */}\r\n                                <div className=\"flex mb-5\">\r\n                                    <div className=\"h-9 w-9 lg:h-11 lg:w-11 border-gray-400 dark:border-gray-800 rounded-full\">\r\n                                        <img\r\n                                            className=\"rounded-full h-9 w-9 lg:h-11 lg:w-11\"\r\n                                            src={\r\n                                                chattingUser.image\r\n                                                    ? chattingUser.image\r\n                                                    : `https://ui-avatars.com/api/?name=${chattingUser.name}`\r\n                                            }\r\n                                            alt=\"user\"\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <div className=\"dark:text-gray-500 px-2\">\r\n                                            {new Date(chat.updatedAt).toLocaleDateString('en-US', {\r\n                                                hour: 'numeric',\r\n                                                minute: 'numeric',\r\n                                            })}\r\n                                        </div>\r\n                                        <Dropdown\r\n                                            overlay={\r\n                                                <Menu className=\"dark:bg-gray-800\">\r\n                                                    <Menu.Item\r\n                                                        className=\"dark:text-white dark:hover:text-black\"\r\n                                                        key=\"1\"\r\n                                                        onClick={() => copyMsg(chat.message)}\r\n                                                    >\r\n                                                        Copy\r\n                                                    </Menu.Item>\r\n                                                    <Menu.Item\r\n                                                        className=\"dark:text-white dark:hover:text-black\"\r\n                                                        key=\"2\"\r\n                                                    >\r\n                                                        Quote\r\n                                                    </Menu.Item>\r\n                                                    <Menu.Item\r\n                                                        className=\"dark:text-white dark:hover:text-black\"\r\n                                                        key=\"3\"\r\n                                                    >\r\n                                                        Forward\r\n                                                    </Menu.Item>\r\n                                                    <Menu.Item\r\n                                                        className=\"dark:text-white dark:hover:text-black\"\r\n                                                        key=\"3\"\r\n                                                    >\r\n                                                        Select Message\r\n                                                    </Menu.Item>\r\n                                                </Menu>\r\n                                            }\r\n                                            trigger={['contextMenu']}\r\n                                        >\r\n                                            <div className=\"ml-2 p-3 max-w-xs lg:max-w-lg xl:max-w-xl border dark:border-gray-800 rounded-tl-none rounded-xl dark:bg-gray-800 shadow-xl\">\r\n                                                {chat.message}\r\n                                            </div>\r\n                                        </Dropdown>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                {/* my message */}\r\n                                <div className=\"flex mb-5 justify-end\">\r\n                                    <div>\r\n                                        <div className=\"dark:text-gray-500 px-3 flex justify-end\">\r\n                                            {new Date(chat.updatedAt).toLocaleDateString('en-US', {\r\n                                                hour: 'numeric',\r\n                                                minute: 'numeric',\r\n                                            })}\r\n                                        </div>\r\n                                        <Dropdown\r\n                                            overlay={\r\n                                                <Menu className=\"dark:bg-gray-800\">\r\n                                                    <Menu.Item\r\n                                                        className=\"dark:text-white dark:hover:text-black\"\r\n                                                        key=\"1\"\r\n                                                        onClick={() => copyMsg(chat.message)}\r\n                                                    >\r\n                                                        Copy\r\n                                                    </Menu.Item>\r\n                                                    <Menu.Item\r\n                                                        className=\"dark:text-white dark:hover:text-black\"\r\n                                                        key=\"2\"\r\n                                                    >\r\n                                                        Quote\r\n                                                    </Menu.Item>\r\n                                                    <Menu.Item\r\n                                                        className=\"dark:text-white dark:hover:text-black\"\r\n                                                        key=\"3\"\r\n                                                    >\r\n                                                        Forward\r\n                                                    </Menu.Item>\r\n                                                    <Menu.Item\r\n                                                        className=\"dark:text-white dark:hover:text-black\"\r\n                                                        key=\"3\"\r\n                                                    >\r\n                                                        Select Message\r\n                                                    </Menu.Item>\r\n                                                </Menu>\r\n                                            }\r\n                                            trigger={['contextMenu']}\r\n                                        >\r\n                                            <div className=\"mr-2 p-3 max-w-xs lg:max-w-lg xl:max-w-xl ml-auto flex border dark:border-gray-800 rounded-tr-none rounded-xl dark:bg-gray-800 shadow-xl\">\r\n                                                {chat.message}\r\n                                            </div>\r\n                                        </Dropdown>\r\n                                        {index === chat.length && (\r\n                                            <div className=\"h-5 w-5 mr-2 border-gray-400 ml-auto dark:border-gray-800 rounded-full\">\r\n                                                <img\r\n                                                    className=\"rounded-full h-5 w-5\"\r\n                                                    src={\r\n                                                        chattingUser.image\r\n                                                            ? chattingUser.image\r\n                                                            : `https://ui-avatars.com/api/?name=${chattingUser.name}`\r\n                                                    }\r\n                                                    alt=\"user\"\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"h-9 w-9 lg:h-11 lg:w-11 border-gray-400 dark:border-gray-800 rounded-full\">\r\n                                        <img\r\n                                            className=\"rounded-full h-9 w-9 lg:h-11 lg:w-11\"\r\n                                            src={\r\n                                                details?.photo ??\r\n                                                `https://ui-avatars.com/api/?name=${details.name}`\r\n                                            }\r\n                                            alt=\"user\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                        <div ref={lastMessage} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {/* input text area */}\r\n            <div\r\n                className=\" py-2 sticky bottom-0 left-0 right-0 dark:bg-black ml-auto\"\r\n                ref={bottomAreaHeight}\r\n            >\r\n                <div className=\"flex justify-between\">\r\n                    <div\r\n                        className=\"group dark:bg-gray-800 border dark:border-gray-800 rounded-xl \"\r\n                        style={{\r\n                            width: inputTextWidth * (3 / 4),\r\n                        }}\r\n                    >\r\n                        {pickFile && (\r\n                            <div className=\"flex flex-wrap items-center h-32 px-2 py-1 overflow-auto w-full\">\r\n                                <Upload\r\n                                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                                    listType=\"picture-card\"\r\n                                    fileList={fileList}\r\n                                    onPreview={handlePreview}\r\n                                    onChange={handleChange}\r\n                                    multiple={true}\r\n                                >\r\n                                    {uploadButton}\r\n                                </Upload>\r\n                                <Modal\r\n                                    visible={previewVisible}\r\n                                    title={previewTitle}\r\n                                    footer={null}\r\n                                    onCancel={handleCancel}\r\n                                >\r\n                                    <img\r\n                                        alt=\"example\"\r\n                                        style={{ width: '100%' }}\r\n                                        src={previewImage}\r\n                                    />\r\n                                </Modal>\r\n                            </div>\r\n                        )}\r\n\r\n                        <div className=\"flex overflow-x-hidden\">\r\n                            <div>\r\n                                <span\r\n                                    onClick={() => setShowPicker((val) => !val)}\r\n                                    className=\"material-icons-outlined p-2 mr-1 cursor-pointer rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-900 transition-all ease-in-out\"\r\n                                >\r\n                                    sentiment_satisfied\r\n                                </span>\r\n                                <Modal\r\n                                    title=\"Select Emoji\"\r\n                                    centered\r\n                                    visible={showPicker}\r\n                                    onOk={() => setShowPicker(false)}\r\n                                    onCancel={() => setShowPicker(false)}\r\n                                >\r\n                                    <Picker\r\n                                        pickerStyle={{ width: '100%' }}\r\n                                        onEmojiClick={onEmojiClick}\r\n                                    />\r\n                                </Modal>\r\n                            </div>\r\n\r\n                            <TextArea\r\n                                ref={textArea}\r\n                                value={message}\r\n                                type=\"text\"\r\n                                placeholder=\"Type a message\"\r\n                                className=\"dark:text-white h-11 transition-all ease-in-out focus:border-none hover:border-none pt-2 text-lg border-none dark:border-gray-800 dark:bg-gray-800 focus:outline-none rounded-xl\"\r\n                                style={{\r\n                                    width: inputTextWidth * (3 / 4) - 30,\r\n                                }}\r\n                                onChange={(e) => setMessage(e.target.value)}\r\n                                onKeyPress={sendMessage}\r\n                                autoSize={{ maxRows: 5, minRows: 5 }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <span\r\n                            className=\"material-icons-outlined p-2 mx-2 dark:bg-gray-800 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-black transition-all ease-in-out\"\r\n                            onClick={messageSendHandler}\r\n                        >\r\n                            send\r\n                        </span>\r\n                        {!isMobileWidth ? (\r\n                            <>\r\n                                <span\r\n                                    className=\"material-icons-outlined p-2 mx-2 dark:bg-gray-800 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-black transition-all ease-in-out\"\r\n                                    onClick={() => setPickFile(!pickFile)}\r\n                                >\r\n                                    {pickFile ? 'close' : 'attach_file'}\r\n                                </span>\r\n                                <span className=\"material-icons-outlined p-2 mx-2 dark:bg-gray-800 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-black transition-all ease-in-out\">\r\n                                    contact_mail\r\n                                </span>\r\n                            </>\r\n                        ) : (\r\n                            <Dropdown overlay={menu} placement=\"topRight\" arrow>\r\n                                <span className=\"material-icons-outlined p-2 mx-2 bg-gray-800 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-black transition-all ease-in-out\">\r\n                                    more_horiz\r\n                                </span>\r\n                            </Dropdown>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatArea;\r\n","const Modal = ({ children, showUserDetailsModal }) => {\r\n    return (\r\n        <div\r\n            className={`fixed z-10 inset-0 overflow-y-auto ease-in-out duration-300 ${\r\n                showUserDetailsModal ? 'visible opacity-100' : 'invisible opacity-0'\r\n            } `}\r\n            aria-labelledby=\"modal-title\"\r\n            role=\"dialog\"\r\n            aria-modal=\"true\"\r\n        >\r\n            <div\r\n                className=\"\r\n                    flex\r\n                    items-center\r\n                    justify-center\r\n                    min-h-screen\r\n                    pt-4\r\n                    px-4\r\n                    pb-20\r\n                    text-center\r\n                    sm:block sm:p-0\r\n                \"\r\n            >\r\n                <div\r\n                    className=\"fixed inset-0 bg-gray-500 dark:bg-transparent bg-opacity-75 transition-opacity\"\r\n                    aria-hidden=\"true\"\r\n                ></div>\r\n\r\n                <span\r\n                    className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\r\n                    aria-hidden=\"true\"\r\n                >\r\n                    &#8203;\r\n                </span>\r\n\r\n                {/* <!-- modal body --> */}\r\n                <div\r\n                    className=\"\r\n                        inline-block\r\n                        align-bottom\r\n                        bg-white\r\n                        dark:bg-gray-800\r\n                        rounded-lg\r\n                        text-left\r\n                        overflow-hidden\r\n                        shadow-xl\r\n                        transform\r\n                        transition-all\r\n                        sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\r\n                    \"\r\n                >\r\n                    {children}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import { useEffect, useState } from 'react';\r\nimport Modal from './Modal';\r\n\r\nconst ChattingHead = ({ closeUserChat, toggleRightSidePanel, chattingUser }) => {\r\n    const [isMobileWidth, setIsMobileWidth] = useState(false);\r\n    const [showUserDetailsModal, setShowUserDetailsModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (window.innerWidth < 992) {\r\n            setIsMobileWidth(true);\r\n        } else {\r\n            setIsMobileWidth(false);\r\n        }\r\n\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerWidth < 992) {\r\n                setIsMobileWidth(true);\r\n            } else {\r\n                setIsMobileWidth(false);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"flex justify-between items-center border-b dark:border-gray-500\">\r\n            <div className=\"flex items-center mb-4\">\r\n                <span\r\n                    className=\"visible w-auto lg:invisible lg:w-0 material-icons-outlined p-1.5 mr-3 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-800 transition-all ease-in-out\"\r\n                    onClick={closeUserChat}\r\n                >\r\n                    west\r\n                </span>\r\n                <div className=\"h-12 w-12 border-gray-400 dark:border-gray-800 rounded-full\">\r\n                    <img\r\n                        className=\"rounded-full h-11 w-11\"\r\n                        src={\r\n                            chattingUser.image\r\n                                ? chattingUser.image\r\n                                : `https://ui-avatars.com/api/?name=${chattingUser.name}`\r\n                        }\r\n                        alt=\"user\"\r\n                    />\r\n                </div>\r\n                <div className=\"pl-2 w-32 lg:w-auto\">\r\n                    <div className=\"flex items-center\">\r\n                        <p className=\"mb-0 w-24 lg:w-auto truncate text-lg text-black group-hover:text-white dark:text-white\">\r\n                            {chattingUser.name}\r\n                        </p>\r\n                        <span\r\n                            className=\"material-icons-outlined ml-1 cursor-pointer hover:text-gray-400 transition-colors duration-700 ease-in-out\"\r\n                            style={{ fontSize: 15 }}\r\n                            onClick={() => setShowUserDetailsModal(true)}\r\n                        >\r\n                            settings\r\n                        </span>\r\n                        <Modal showUserDetailsModal={showUserDetailsModal}>\r\n                            <div className=\"relative\">\r\n                                <div className=\"absolute top-10 left-1/2 transform -translate-x-1/2\">\r\n                                    <img\r\n                                        className=\"rounded-full h-28 w-28\"\r\n                                        src={\r\n                                            chattingUser.image\r\n                                                ? chattingUser.image\r\n                                                : `https://ui-avatars.com/api/?name=${chattingUser.name}`\r\n                                        }\r\n                                        alt=\"user\"\r\n                                    />\r\n                                </div>\r\n                                <span\r\n                                    onClick={() => setShowUserDetailsModal(false)}\r\n                                    className=\"material-icons-outlined absolute top-0 right-0 p-1 dark:bg-gray-800 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-black transition-all ease-in-out\"\r\n                                >\r\n                                    close\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"mt-40 pb-4\">\r\n                                <h1 className=\"text-2xl font-bold text-center  dark:text-white\">\r\n                                    {chattingUser.name}\r\n                                </h1>\r\n\r\n                                <ul className=\"list-none mx-8 mt-10 mb-7\">\r\n                                    <li className=\"border-b py-3 px-3 dark:border-gray-600 flex items-center cursor-pointer hover:bg-gray-400 dark:hover:bg-gray-900  hover:text-white transition-all ease-in-out\">\r\n                                        <span className=\"material-icons-outlined mr-2 text-xs\">\r\n                                            message\r\n                                        </span>\r\n                                        <span>Send Message</span>\r\n                                    </li>\r\n                                    <li className=\"border-b py-3 dark:border-gray-600 flex items-center cursor-pointer hover:bg-gray-400 dark:hover:bg-gray-900  hover:text-white px-3 transition-all ease-in-out\">\r\n                                        <span className=\"material-icons-outlined mr-2 text-xs\">\r\n                                            call\r\n                                        </span>\r\n                                        <span>Make a call</span>\r\n                                    </li>\r\n                                    <li className=\"border-b py-3 dark:border-gray-600 flex items-center cursor-pointer hover:bg-gray-400 dark:hover:bg-gray-900  hover:text-white px-3 transition-all ease-in-out\">\r\n                                        <span className=\"material-icons-outlined mr-2 text-xs\">\r\n                                            videocam\r\n                                        </span>\r\n                                        <span>Make a video call</span>\r\n                                    </li>\r\n                                    <li className=\"border-b py-3 dark:border-gray-600 flex items-center cursor-pointer hover:bg-gray-400 dark:hover:bg-gray-900  hover:text-white px-3 transition-all ease-in-out\">\r\n                                        <span className=\"material-icons-outlined mr-2 text-xs text-red-700 font-bold\">\r\n                                            block\r\n                                        </span>\r\n                                        <span>Block this user</span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                        <div\r\n                            className={`border rounded-full h-2 w-2 ${\r\n                                chattingUser.isActive ? 'bg-green-500' : 'bg-yellow-500'\r\n                            }`}\r\n                        ></div>\r\n                        <p className=\"mb-0.5 ml-2 text-xs group-hover:text-white dark:text-gray-200 text-gray-500 font-semibold pt-1 w-44 cursor-pointer truncate\">\r\n                            {chattingUser.isActive ? 'Active now' : 'Away'}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex items-center mb-4\">\r\n                {!isMobileWidth && (\r\n                    <>\r\n                        <span className=\"material-icons-outlined p-1.5 mr-1 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-800 transition-all ease-in-out\">\r\n                            search\r\n                        </span>\r\n                        <span\r\n                            onClick={toggleRightSidePanel}\r\n                            className=\"material-icons-outlined p-1.5 mr-1 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-800 transition-all ease-in-out\"\r\n                        >\r\n                            photo_library\r\n                        </span>\r\n                        <span className=\"material-icons-outlined p-1.5 mr-1 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-800 transition-all ease-in-out\">\r\n                            person_add_alt_1\r\n                        </span>\r\n                    </>\r\n                )}\r\n                <span className=\"material-icons-outlined p-1.5 mr-1 dark:text-white cursor-pointer border bg-blue-500 rounded-full border-gray-400 dark:border-gray-800 hover:bg-blue-800 text-white transition-all ease-in-out\">\r\n                    videocam\r\n                </span>\r\n                <span className=\"material-icons-outlined p-1.5 mr-1 dark:text-white cursor-pointer border bg-blue-500 rounded-full border-gray-400 dark:border-gray-800 hover:bg-blue-800 text-white transition-all ease-in-out\">\r\n                    call\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChattingHead;\r\n","import ChatArea from './ChatArea';\r\nimport ChattingHead from './ChattingHead';\r\n\r\nconst Chatting = ({ closeUserChat, isMobileWidth, toggleRightSidePanel, chattingUser, socket }) => {\r\n    return (\r\n        <div className=\"w-full h-screen dark:bg-black p-4\">\r\n            <ChattingHead\r\n                chattingUser={chattingUser}\r\n                closeUserChat={closeUserChat}\r\n                isMobileWidth={isMobileWidth}\r\n                toggleRightSidePanel={toggleRightSidePanel}\r\n            />\r\n            <ChatArea chattingUser={chattingUser} socket={socket} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chatting;\r\n","import { useState } from 'react';\r\n\r\nconst ChatUser = ({ userDetails, openUserChat, chattingUser, userMessage }) => {\r\n    const [activeChat, setActiveChat] = useState(false);\r\n    const [showMessageCount, setShowMessageCount] = useState(true);\r\n\r\n    return (\r\n        <div\r\n            className={`flex group justify-between mt-2 p-2 rounded-xl border dark:border-gray-800 hover:bg-gray-800 dark:hover:bg-gray-800 ${\r\n                activeChat ? 'bg-gray-800' : ''\r\n            } cursor-pointer transition-colors duration-100 ease-in-out hover:shadow-lg`}\r\n            onClick={() => {\r\n                openUserChat();\r\n                setActiveChat(!activeChat);\r\n                chattingUser(userDetails);\r\n                setShowMessageCount(false);\r\n            }}\r\n        >\r\n            <div className=\"flex justify-start items-center\">\r\n                <div className=\"border h-12 w-12 border-gray-400 dark:border-gray-800 rounded-full relative\">\r\n                    <img\r\n                        className=\"rounded-full\"\r\n                        src={\r\n                            userDetails.image\r\n                                ? userDetails.image\r\n                                : `https://ui-avatars.com/api/?name=${userDetails.name}`\r\n                        }\r\n                        alt=\"user\"\r\n                    />\r\n                    <div\r\n                        className={`absolute bottom-0 right-0 border rounded-full h-3 w-3 ${\r\n                            userDetails.isActive ? 'bg-green-500' : 'bg-yellow-500'\r\n                        }`}\r\n                    ></div>\r\n                </div>\r\n                <div className=\"pl-2\">\r\n                    <p\r\n                        className={`mb-0 text-sm text-black group-hover:text-white ${\r\n                            activeChat ? 'text-white' : ''\r\n                        } dark:text-white truncate w-36`}\r\n                    >\r\n                        {userDetails.name}\r\n                    </p>\r\n                    {userMessage.length !== 0 && (\r\n                        <p\r\n                            className={`mb-0 text-xs group-hover:text-white dark:text-gray-200 ${\r\n                                activeChat ? 'text-white' : ''\r\n                            } text-gray-500 font-semibold pt-1 w-44 cursor-pointer truncate`}\r\n                        >\r\n                            {userMessage[userMessage.length - 1]?.message}\r\n                        </p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            {userMessage.length !== 0 && (\r\n                <div>\r\n                    <div\r\n                        className={`text-xs group-hover:text-white text-black ${\r\n                            activeChat ? 'text-white' : ''\r\n                        } dark:text-white w-14`}\r\n                    >\r\n                        {new Date(\r\n                            userMessage[userMessage.length - 1]?.updatedAt,\r\n                        ).toLocaleTimeString('en-Us', {\r\n                            hour: '2-digit',\r\n                            minute: '2-digit',\r\n                        })}\r\n                    </div>\r\n                    {showMessageCount && (\r\n                        <div\r\n                            className={`bg-blue-700 text-white h-5 w-5 rounded-full mx-auto text-center mt-2`}\r\n                        >\r\n                            {userMessage?.length}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatUser;\r\n","import { Dropdown, Menu } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport ChatUser from './ChatUser';\r\nimport DarkModeToggler from './DarkModeToggler';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\n// import { SocketContext } from './Socket';\r\n\r\nconst SidePanel = ({\r\n    logOut,\r\n    featureHeight,\r\n    chatListHeight,\r\n    chatUsers,\r\n    openUserChat,\r\n    chattingUser,\r\n}) => {\r\n    const [status, setStatus] = useState('Active');\r\n    const [onlineStatus, setOnlineStatus] = useState('active');\r\n    const [activeNav, setActiveNav] = useState('chat');\r\n    const navigate = useNavigate();\r\n    const { details } = useSelector((state) => state.details);\r\n    // const socket = useContext(SocketContext);\r\n    const socket = useSelector((state) => state.socket);\r\n    const dispatch = useDispatch();\r\n    // const messages = useSelector((state) => state.messages);\r\n    const [messageList, setMessageList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        let audio = new Audio('/message.mp3');\r\n        if (Object.keys(socket).length) {\r\n            socket.on('messageSent', (message) => {\r\n                if (details && details.email === message.receiver) {\r\n                    setMessageList((prev) => [...prev, message]);\r\n                    audio.play();\r\n                }\r\n            });\r\n            return () => {\r\n                socket.off();\r\n            };\r\n        }\r\n    }, [details, messageList, socket]);\r\n\r\n    const menu = (\r\n        <Menu className=\"dark:bg-gray-800\">\r\n            <Menu.Item key=\"setting\" className=\"dark:text-white dark:hover:text-black\">\r\n                <Link to=\"/setting\">Setting</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"logout\" className=\"dark:text-white dark:hover:text-black\">\r\n                <p\r\n                    className=\"cursor-pointer mb-0\"\r\n                    onClick={() => {\r\n                        dispatch(logOut());\r\n                        navigate('/');\r\n                    }}\r\n                >\r\n                    Logout\r\n                </p>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    const statusDropDown = (\r\n        <Menu className=\"dark:bg-gray-800\">\r\n            <Menu.Item key=\"Be right back\" className=\"dark:text-white dark:hover:text-black\">\r\n                <p onClick={() => setStatus('Be right back')}>Be right back</p>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"Out of lunch\" className=\"dark:text-white dark:hover:text-black\">\r\n                <p onClick={() => setStatus('Out of lunch')}>Out of lunch</p>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"Out for lunch\" className=\"dark:text-white dark:hover:text-black\">\r\n                <p onClick={() => setStatus('Out for lunch')}>Out for lunch</p>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"In meetings\" className=\"dark:text-white dark:hover:text-black\">\r\n                <p onClick={() => setStatus('In meetings')}>In meetings</p>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"At school\" className=\"dark:text-white dark:hover:text-black\">\r\n                <p onClick={() => setStatus('At school')}>At school</p>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"At the movies\" className=\"dark:text-white dark:hover:text-black\">\r\n                <p onClick={() => setStatus('At the movies')}>At the movies</p>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"Working from home\" className=\"dark:text-white dark:hover:text-black\">\r\n                <p onClick={() => setStatus('Working from home')}>Working from home</p>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    const onlineStatusDropDown = (\r\n        <Menu className=\"dark:bg-gray-800\">\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <p\r\n                    onClick={() => setOnlineStatus('active')}\r\n                    className=\"flex justify-end items-center\"\r\n                >\r\n                    {onlineStatus === 'active' && (\r\n                        <span class=\"material-icons-outlined text-xs mr-2\">done</span>\r\n                    )}\r\n                    <span>Active</span>\r\n                </p>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <p\r\n                    onClick={() => setOnlineStatus('away')}\r\n                    className=\"flex justify-end items-center\"\r\n                >\r\n                    {onlineStatus === 'away' && (\r\n                        <span class=\"material-icons-outlined text-xs mr-2\">done</span>\r\n                    )}\r\n                    <span>Away</span>\r\n                </p>\r\n            </Menu.Item>\r\n            <Menu.Item className=\"dark:text-white dark:hover:text-black\">\r\n                <p\r\n                    onClick={() => setOnlineStatus('do not disturb')}\r\n                    className=\"flex justify-end items-center\"\r\n                >\r\n                    {onlineStatus === 'do not disturb' && (\r\n                        <span class=\"material-icons-outlined text-xs mr-2\">done</span>\r\n                    )}\r\n                    <span>Do not disturb</span>\r\n                </p>\r\n            </Menu.Item>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div className=\"w-full lg:w-96 h-screen dark:bg-gray-900 dark:text-white border dark:border-gray-900\">\r\n            <div ref={featureHeight} className=\"px-3\">\r\n                {/* skype profile */}\r\n                <div className=\"flex justify-between items-center py-2\">\r\n                    <div className=\"flex justify-start items-center\">\r\n                        <div className=\"border h-10 w-10 border-gray-400 dark:border-gray-800 rounded-full relative\">\r\n                            {details?.photo ? (\r\n                                <img\r\n                                    className=\"rounded-full h-10 w-10\"\r\n                                    src={details?.photo}\r\n                                    alt=\"user\"\r\n                                />\r\n                            ) : (\r\n                                <img\r\n                                    className=\"rounded-full h-10 w-10\"\r\n                                    src={`https://ui-avatars.com/api/?name=${details?.name}`}\r\n                                    alt=\"user\"\r\n                                />\r\n                            )}\r\n                            <Dropdown\r\n                                overlay={onlineStatusDropDown}\r\n                                placement=\"bottomRight\"\r\n                                trigger={['click']}\r\n                            >\r\n                                <div\r\n                                    className={`absolute bottom-0 right-0 border rounded-full h-3 w-3 cursor-pointer ${\r\n                                        onlineStatus === 'active'\r\n                                            ? 'bg-green-500'\r\n                                            : onlineStatus === 'away'\r\n                                            ? 'bg-yellow-400'\r\n                                            : 'bg-red-600'\r\n                                    }`}\r\n                                ></div>\r\n                            </Dropdown>\r\n                        </div>\r\n                        <div className=\"pl-2\">\r\n                            <p className=\"text-sm mb-0 truncate w-32\">{details?.name}</p>\r\n                            <Dropdown\r\n                                overlay={statusDropDown}\r\n                                placement=\"bottomRight\"\r\n                                trigger={['click']}\r\n                            >\r\n                                <p className=\"text-xs mb-0 dark:text-gray-200 text-gray-500 font-semibold pt-1 cursor-pointer\">\r\n                                    {status}\r\n                                </p>\r\n                            </Dropdown>\r\n                        </div>\r\n                    </div>\r\n                    <DarkModeToggler />\r\n                    <Dropdown overlay={menu} placement=\"bottomRight\" trigger={['click']}>\r\n                        <span className=\"material-icons-outlined p-1 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-800 transition-all ease-in-out\">\r\n                            more_horiz\r\n                        </span>\r\n                    </Dropdown>\r\n                </div>\r\n\r\n                {/* search people area */}\r\n                <div className=\"flex justify-between items-center\">\r\n                    <div className=\"flex mr-3 items-center w-full dark:bg-gray-800 border dark:border-gray-800 border-gray-400 rounded-lg p-2 h-10\">\r\n                        <span className=\"material-icons-outlined dark:text-gray-200 font-thin\">\r\n                            search\r\n                        </span>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"People, groups, messages\"\r\n                            className=\"dark:text-white w-full text-xs pl-2 dark:bg-gray-800 focus:outline-none\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"p-2 border w-8 flex cursor-pointer rounded-lg justify-center items-center h-10 border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-gray-800 transition-all ease-in-out\">\r\n                        <span className=\"material-icons-outlined text-xs\">dialpad</span>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* chat call notification navs */}\r\n                <div className=\"flex justify-between items-center mt-3\">\r\n                    <div\r\n                        className=\"flex-col group justify-center items-center cursor-pointer text-center\"\r\n                        onClick={() => setActiveNav('chat')}\r\n                    >\r\n                        <span\r\n                            className={`border ${\r\n                                activeNav === 'chat'\r\n                                    ? 'bg-blue-900 border-blue-800 text-white'\r\n                                    : 'group-hover:border-blue-800 group-hover:bg-blue-800'\r\n                            } group-hover:text-white  rounded-full p-2  dark:group-hover:text-white dark:border-gray-800 material-icons-outlined text-xs transition-all ease-in-out`}\r\n                        >\r\n                            chat\r\n                        </span>\r\n                        <p\r\n                            className={`text-xs ${\r\n                                activeNav === 'chat'\r\n                                    ? 'dark:text-blue-300 text-white'\r\n                                    : 'group-hover:text-blue-800 dark:group-hover:text-blue-300'\r\n                            }  dark:text-gray-200 text-gray-500 transition-all ease-in-out font-semibold pt-0`}\r\n                        >\r\n                            Chats\r\n                        </p>\r\n                    </div>\r\n                    <div\r\n                        className=\"flex-col group justify-center items-center cursor-pointer text-center\"\r\n                        onClick={() => setActiveNav('call')}\r\n                    >\r\n                        <span\r\n                            className={`border ${\r\n                                activeNav === 'call'\r\n                                    ? 'bg-blue-900 border-blue-800 text-white'\r\n                                    : 'group-hover:border-blue-800 group-hover:bg-blue-800'\r\n                            } group-hover:text-white  rounded-full p-2  dark:group-hover:text-white dark:border-gray-800 material-icons-outlined text-xs transition-all ease-in-out`}\r\n                        >\r\n                            call\r\n                        </span>\r\n                        <p\r\n                            className={`text-xs ${\r\n                                activeNav === 'call'\r\n                                    ? 'dark:text-blue-300 text-white'\r\n                                    : 'group-hover:text-blue-800 dark:group-hover:text-blue-300'\r\n                            }  dark:text-gray-200 text-gray-500 transition-all ease-in-out font-semibold pt-0`}\r\n                        >\r\n                            Calls\r\n                        </p>\r\n                    </div>\r\n                    <div\r\n                        className=\"flex-col group justify-center items-center cursor-pointer text-center\"\r\n                        onClick={() => setActiveNav('contacts')}\r\n                    >\r\n                        <span\r\n                            className={`border ${\r\n                                activeNav === 'contacts'\r\n                                    ? 'bg-blue-900 border-blue-800 text-white'\r\n                                    : 'group-hover:border-blue-800 group-hover:bg-blue-800'\r\n                            } group-hover:text-white  rounded-full p-2  dark:group-hover:text-white dark:border-gray-800 material-icons-outlined text-xs transition-all ease-in-out`}\r\n                        >\r\n                            perm_contact_calendar\r\n                        </span>\r\n                        <p\r\n                            className={`text-xs ${\r\n                                activeNav === 'contacts'\r\n                                    ? 'dark:text-blue-300 text-white'\r\n                                    : 'group-hover:text-blue-800 dark:group-hover:text-blue-300'\r\n                            }  dark:text-gray-200 text-gray-500 transition-all ease-in-out font-semibold pt-0`}\r\n                        >\r\n                            Contacts\r\n                        </p>\r\n                    </div>\r\n                    <div\r\n                        className=\"flex-col group justify-center items-center cursor-pointer text-center\"\r\n                        onClick={() => setActiveNav('notifications')}\r\n                    >\r\n                        <span\r\n                            className={`border ${\r\n                                activeNav === 'notifications'\r\n                                    ? 'bg-blue-900 border-blue-800 text-white'\r\n                                    : 'group-hover:border-blue-800 group-hover:bg-blue-800'\r\n                            } group-hover:text-white  rounded-full p-2  dark:group-hover:text-white dark:border-gray-800 material-icons-outlined text-xs transition-all ease-in-out`}\r\n                        >\r\n                            notifications\r\n                        </span>\r\n                        <p\r\n                            className={`text-xs ${\r\n                                activeNav === 'notifications'\r\n                                    ? 'dark:text-blue-300 text-white'\r\n                                    : 'group-hover:text-blue-800 dark:group-hover:text-blue-300'\r\n                            }  dark:text-gray-200 text-gray-500 transition-all ease-in-out font-semibold pt-0`}\r\n                        >\r\n                            Notifications\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* chatting and calling options */}\r\n                <div className=\"flex justify-between items-center mt-3\">\r\n                    <div className=\"flex justify-around mr-1.5 cursor-pointer items-center w-full dark:bg-gray-800 border dark:border-gray-800 border-gray-400 rounded-xl p-2 h-10\">\r\n                        <span className=\"material-icons-outlined dark:text-gray-200 font-thin text-xs\">\r\n                            videocam\r\n                        </span>\r\n                        <p className=\"dark:text-white pl-2 text-sm mb-0\">Meet now</p>\r\n                    </div>\r\n                    <div className=\"flex justify-around ml-1.5 cursor-pointer items-center w-full dark:bg-gray-800 border dark:border-gray-800 border-gray-400 rounded-xl p-2 h-10\">\r\n                        <span className=\"material-icons-outlined dark:text-gray-200 font-thin text-xs\">\r\n                            forum\r\n                        </span>\r\n                        <p className=\"dark:text-white pl-2 text-sm mb-0\">New Chat</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* chatting list */}\r\n            <div\r\n                className=\"overflow-y-auto mt-2 px-3 chatList\"\r\n                style={{ maxHeight: featureHeight.current ? `${chatListHeight}` : 'auto' }}\r\n            >\r\n                {chatUsers &&\r\n                    chatUsers.map((user) => (\r\n                        <ChatUser\r\n                            key={user._id}\r\n                            image={\r\n                                user.image\r\n                                    ? user.image\r\n                                    : `https://ui-avatars.com/api/?name=${user.name}`\r\n                            }\r\n                            chattingUser={chattingUser}\r\n                            userDetails={user}\r\n                            userMessage={\r\n                                messageList &&\r\n                                messageList.filter(\r\n                                    (m) => m.sender === user.email || m.receiver === user.email,\r\n                                )\r\n                            }\r\n                            openUserChat={openUserChat}\r\n                        />\r\n                    ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SidePanel;\r\n","import { Image } from 'antd';\r\n\r\nconst RightSidePanel = ({ toggleRightSidePanel }) => {\r\n    return (\r\n        <div className=\"px-4 pt-10 relative\">\r\n            <span\r\n                className=\"material-icons-outlined absolute top-2 left-0 p-2 mx-2 dark:bg-gray-800 cursor-pointer border rounded-full border-gray-400 dark:border-gray-800 hover:bg-gray-400 hover:text-white dark:hover:bg-black transition-all ease-in-out\"\r\n                onClick={toggleRightSidePanel}\r\n            >\r\n                close\r\n            </span>\r\n            <div className=\"h-screen overflow-y-scroll mt-4\">\r\n                {[...Array(20)].map((_, i) => {\r\n                    if (i % 2 === 0) {\r\n                        return (\r\n                            <div key={i} className=\"my-4\">\r\n                                <p className=\"dark:text-gray-500 text-black mb-1\">You, 4.16 PM</p>\r\n                                <div className=\"w-full border dark:border-gray-800 rounded-xl flex justify-center p-2 shadow hover:shadow-lg transition-shadow ease-in-out duration-700\">\r\n                                    <Image\r\n                                        width=\"100%\"\r\n                                        className=\"rounded-xl w-full\"\r\n                                        src=\"https://picsum.photos/200/300\"\r\n                                        alt=\"pic\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    }\r\n                    return (\r\n                        <div key={i} className=\"my-4 \">\r\n                            <p className=\"dark:text-gray-500 text-black mb-1\">You, 4.16 PM</p>\r\n                            <div className=\"w-full border dark:border-gray-800 rounded-xl flex justify-center p-5 shadow hover:shadow-lg transition-shadow ease-in-out duration-700 flex-col\">\r\n                                <p className=\"dark:text-gray-300 text-black text-lg\">\r\n                                    mediaQuery.css\r\n                                </p>\r\n                                <div className=\"flex items-center my-5\">\r\n                                    <span className=\"material-icons-outlined  mr-2\">\r\n                                        insert_drive_file\r\n                                    </span>\r\n                                    <span>File</span>\r\n                                </div>\r\n                                <hr className=\"dark:border-gray-800 border-gray-400 h-2\" />\r\n\r\n                                <a\r\n                                    href=\"#top\"\r\n                                    className=\"dark:text-gray-300 text-black text-lg text-center dark:hover:text-gray-400 transition-all hover:text-gray-400 ease-in-out duration-700\"\r\n                                >\r\n                                    Download\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RightSidePanel;\r\n","export const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAILURE = 'USER_DETAILS_FAILURE';\r\n","export const CHAT_USERS = 'CHAT_USERS';\r\n","import { io } from 'socket.io-client';\r\n\r\nconst SOCKET = 'SOCKET';\r\n\r\nexport const socketReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case SOCKET:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const socketAction = () => (dispatch) => {\r\n    let socket = io('/');\r\n    socket.on('connect', () => {\r\n        dispatch({\r\n            type: SOCKET,\r\n            payload: socket,\r\n        });\r\n    });\r\n};\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logOut } from '../Redux/Actions/LoginAction';\r\nimport WelcomePage from '../Components/WelcomePage';\r\nimport Chatting from './../Components/Chatting';\r\nimport SidePanel from '../Components/SidePanel';\r\nimport RightSidePanel from '../Components/RightSidePanel';\r\nimport { userDetails } from './../Redux/Actions/UserAction';\r\nimport { chatUsersAction } from './../Redux/Actions/ChatUsersAction';\r\n// import { io } from 'socket.io-client';\r\n// import { SocketContext } from '../Components/Socket';\r\nimport { socketAction } from '../Components/socketRedux';\r\n\r\nconst Dashboard = () => {\r\n    const [chatListHeight, setChatListHeight] = useState(0);\r\n    const [userChatOpen, setUserChatOpen] = useState(false);\r\n    const [isMobileWidth, setIsMobileWidth] = useState(false);\r\n    const [showFiles, setShowFiles] = useState(false);\r\n    const user = useSelector((state) => state.user);\r\n    const details = useSelector((state) => state.details);\r\n    // const socket = useContext(SocketContext);\r\n    // const socket = useRef(null);\r\n    const socket = useSelector((state) => state.socket);\r\n    const dispatch = useDispatch();\r\n    const featureHeight = useRef(null);\r\n    const [userList, setUserList] = useState([]);\r\n    const [chattingUserDetails, setChattingUserDetails] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (featureHeight.current) {\r\n            if (window.innerWidth > 991) {\r\n                setChatListHeight(`calc(100vh - ${featureHeight.current.offsetHeight + 20}px)`);\r\n            } else {\r\n                setChatListHeight('auto');\r\n            }\r\n        }\r\n\r\n        if (window.innerWidth < 992) {\r\n            setIsMobileWidth(true);\r\n        } else {\r\n            setIsMobileWidth(false);\r\n        }\r\n\r\n        window.addEventListener('resize', () => {\r\n            if (window.innerWidth < 992) {\r\n                setIsMobileWidth(true);\r\n            } else {\r\n                setIsMobileWidth(false);\r\n            }\r\n        });\r\n\r\n        dispatch(userDetails(user?._id));\r\n        dispatch(socketAction());\r\n    }, [dispatch, user._id]);\r\n\r\n    //*---- Socket connections ----*//\r\n    useEffect(() => {\r\n        //initialize socket\r\n        // socket.current = io('/');\r\n        if (Object.keys(socket).length) {\r\n            //On connection to server the user id will be sent to server and the user will be added to the user list\r\n            // socket.on('connect', () => {\r\n            // the user id is sent to the server while connected\r\n            socket.emit('new-user', { _id: user._id });\r\n            // });\r\n\r\n            return () => {\r\n                //disconnect socket connection on component unmount\r\n                socket.disconnect();\r\n            };\r\n        }\r\n    }, [dispatch, socket, user._id]);\r\n\r\n    useEffect(() => {\r\n        //listen for new user list when a new user joins\r\n        if (Object.keys(socket).length) {\r\n            socket.on('user-connected', (users) => {\r\n                //filter the user list to remove the current user\r\n                setUserList(users.filter((u) => u._id !== user._id));\r\n\r\n                //Add and update the userlist to the redux store\r\n                dispatch(chatUsersAction(users.filter((u) => u._id !== user._id)));\r\n\r\n                if (!users.filter((u) => u._id === chattingUserDetails?._id).length) {\r\n                    setUserChatOpen(false);\r\n                }\r\n            });\r\n\r\n            return () => {\r\n                //disconnect socket connection on component unmount\r\n                socket.off();\r\n            };\r\n        }\r\n    }, [chattingUserDetails, dispatch, socket, user._id]);\r\n\r\n    // open a user chat\r\n    const openUserChat = (userId) => {\r\n        setUserChatOpen(true);\r\n    };\r\n    const closeUserChat = (userId) => {\r\n        setUserChatOpen(false);\r\n    };\r\n\r\n    const toggleRightSidePanel = () => {\r\n        setShowFiles(!showFiles);\r\n    };\r\n\r\n    const chattingUser = (user) => {\r\n        setChattingUserDetails(userList.find((u) => u._id === user._id));\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex-col lg:flex-row flex overflow-hidden\">\r\n            {isMobileWidth && !userChatOpen ? (\r\n                <SidePanel\r\n                    dispatch={dispatch}\r\n                    logOut={logOut}\r\n                    chatUsers={userList}\r\n                    featureHeight={featureHeight}\r\n                    chatListHeight={chatListHeight}\r\n                    openUserChat={openUserChat}\r\n                    chattingUser={chattingUser}\r\n                />\r\n            ) : !isMobileWidth ? (\r\n                <SidePanel\r\n                    dispatch={dispatch}\r\n                    logOut={logOut}\r\n                    chatUsers={userList}\r\n                    featureHeight={featureHeight}\r\n                    chatListHeight={chatListHeight}\r\n                    openUserChat={openUserChat}\r\n                    chattingUser={chattingUser}\r\n                />\r\n            ) : null}\r\n\r\n            {isMobileWidth && userChatOpen ? (\r\n                <div className=\"w-screen h-screen dark:bg-black dark:text-white\">\r\n                    {userChatOpen ? (\r\n                        <Chatting\r\n                            chattingUser={chattingUserDetails}\r\n                            openUserChat={openUserChat}\r\n                            closeUserChat={closeUserChat}\r\n                        />\r\n                    ) : (\r\n                        <WelcomePage img={details?.details?.photo} name={details?.details?.name} />\r\n                    )}\r\n                </div>\r\n            ) : !isMobileWidth ? (\r\n                <div className=\"w-screen h-screen dark:bg-black dark:text-white\">\r\n                    {userChatOpen ? (\r\n                        <Chatting\r\n                            chattingUser={chattingUserDetails}\r\n                            toggleRightSidePanel={toggleRightSidePanel}\r\n                        />\r\n                    ) : (\r\n                        <WelcomePage img={details?.details?.photo} name={details?.details?.name} />\r\n                    )}\r\n                </div>\r\n            ) : null}\r\n\r\n            {showFiles && (\r\n                <div\r\n                    className={` transition-all absolute right-0 w-full lg:w-72 top-0 ease-in-out h-screen duration-1000 dark:bg-gray-900 dark:text-white border dark:border-gray-900 overflow-hidden z-10 bg-white`}\r\n                >\r\n                    <RightSidePanel toggleRightSidePanel={toggleRightSidePanel} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import axios from 'axios';\r\nimport {\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAILURE,\r\n} from '../Constants/UserDetails';\r\n\r\nexport const userDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n        });\r\n\r\n        let {\r\n            data: { data },\r\n        } = await axios.get(`/api/v1/user/${id}`);\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAILURE,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n","import { CHAT_USERS } from './../Constants/ChatUsersContants';\r\n\r\nexport const chatUsersAction = (users) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: CHAT_USERS,\r\n            payload: users,\r\n        });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport { Navigate, useLocation } from 'react-router';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n    const user = useSelector((state) => state.user);\r\n    const location = useLocation();\r\n\r\n    if (!user._id) {\r\n        return <Navigate to=\"/\" state={{ from: location }} />;\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import { Upload, Modal } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport { useState } from 'react';\r\n\r\nconst Test = () => {\r\n    const [fileList, setFileList] = useState([]);\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n\r\n    const getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result);\r\n            reader.onerror = (error) => reject(error);\r\n        });\r\n    };\r\n\r\n    const handleCancel = () => setPreviewVisible(false);\r\n\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n        setPreviewVisible(true);\r\n    };\r\n\r\n    const handleChange = ({ fileList }) => setFileList(fileList);\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Upload\r\n                action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                onPreview={handlePreview}\r\n                onChange={handleChange}\r\n            >\r\n                {fileList.length >= 8 ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n                visible={previewVisible}\r\n                title={previewTitle}\r\n                footer={null}\r\n                onCancel={handleCancel}\r\n            >\r\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Test;\r\n","import './App.css';\nimport { Route, Routes } from 'react-router';\nimport Login from './Screens/Login';\nimport Registration from './Screens/Registration';\nimport Dashboard from './Screens/Dashboard';\nimport ProtectedRoute from './Components/ProtectedRoute';\nimport Test from './Screens/Test';\n\nfunction App() {\n\n  return (\n    <Routes>\n      <Route path=\"/registration\" element={<Registration />} />\n      <Route path=\"/dashboard\" element={\n        <ProtectedRoute>\n          <Dashboard />\n        </ProtectedRoute>\n      }\n      />\n      <Route path=\"/test\" element={<Test />} />\n      <Route path=\"/\" element={<Login />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            // eslint-disable-next-line no-param-reassign\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://cra.link/PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://cra.link/PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","export const CHAT_MESSAGES = 'CHAT_MESSAGES';\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { loginReducer } from './Reducers/LoginReducer';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { getUserDetailsReducer } from './Reducers/UserReducer';\r\nimport { chatUsersReducer } from './Reducers/ChatUsersReducer';\r\nimport { messageReducer } from './Reducers/MessageReducers';\r\nimport { socketReducer } from './../Components/socketRedux';\r\n\r\nconst reducer = combineReducers({\r\n    user: loginReducer,\r\n    details: getUserDetailsReducer,\r\n    chatUsers: chatUsersReducer,\r\n    messages: messageReducer,\r\n    socket: socketReducer\r\n});\r\n\r\nconst initialState = {\r\n    user: localStorage.getItem('token') ? jwt_decode(localStorage.getItem('token')) : null,\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n    LOGIN_REQUEST,\r\n    LOGIN_REQUEST_FAILED,\r\n    LOGIN_REQUEST_SUCCESS,\r\n    LOGOUT,\r\n    REGISTRATION_REQUEST,\r\n    REGISTRATION_REQUEST_SUCCESS,\r\n    REGISTRATION_REQUEST_FAILED,\r\n} from '../Constants/LoginConstants';\r\n\r\nexport const loginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST:\r\n            return { isLoading: true };\r\n        case LOGIN_REQUEST_SUCCESS:\r\n            return action.payload;\r\n        case LOGIN_REQUEST_FAILED:\r\n            return { isLoading: false, error: action.payload };\r\n        case LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const registerReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case REGISTRATION_REQUEST:\r\n            return { isLoading: true };\r\n        case REGISTRATION_REQUEST_SUCCESS:\r\n            return action.payload;\r\n        case REGISTRATION_REQUEST_FAILED:\r\n            return { isLoading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { LOGOUT } from '../Constants/LoginConstants';\r\nimport {\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAILURE,\r\n} from '../Constants/UserDetails';\r\n\r\nexport const getUserDetailsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { isLoading: true };\r\n        case USER_DETAILS_SUCCESS:\r\n            return { isLoading: false, details: action.payload };\r\n        case USER_DETAILS_FAILURE:\r\n            return { isLoading: false, error: action.payload };\r\n        case LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { CHAT_USERS } from '../Constants/ChatUsersContants';\r\nimport { LOGOUT } from '../Constants/LoginConstants';\r\n\r\nexport const chatUsersReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case CHAT_USERS:\r\n            return action.payload;\r\n        case LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { LOGOUT } from '../Constants/LoginConstants';\r\nimport { CHAT_MESSAGES } from './../Constants/MessageConstants';\r\n\r\nexport const messageReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case CHAT_MESSAGES:\r\n            return action.payload;\r\n        case LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport * as ServiceWorkerRegistration from './serviceWorkerRegistration';\nimport store from './Redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nServiceWorkerRegistration.register();\n"],"sourceRoot":""}